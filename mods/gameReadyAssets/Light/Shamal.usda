#usda 1.0
(
    upAxis = "Z"
)

over "RootNode"
{
    over "meshes"
    {
        over "mesh_66F88C2FC45697AD"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Shamal_Light_self_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                float inputs:intensity = 20
                float inputs:radius = 0.2
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (180, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.06000000000006933, 0.35, 1.6)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def SphereLight "Shamal_Light_main_01" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                    float inputs:intensity = 30
                    float inputs:radius = 0.2
                    float inputs:shaping:cone:angle = 90
                    float inputs:shaping:cone:softness
                    float inputs:shaping:focus
                    color3f inputs:shaping:focusTint
                    asset inputs:shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    double3 xformOp:rotateXYZ = (180, -0, 0)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, -2.220446049250313e-16, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def SphereLight "Shamal_Light_self_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                float inputs:intensity = 20
                float inputs:radius = 0.2
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (180, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.06000000000002337, -1.535, 1.600000000044247)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def SphereLight "Shamal_Light_main_01" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                    float inputs:intensity = 30
                    float inputs:radius = 0.2
                    float inputs:shaping:cone:angle = 90
                    float inputs:shaping:cone:softness
                    float inputs:shaping:focus
                    color3f inputs:shaping:focusTint
                    asset inputs:shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    double3 xformOp:rotateXYZ = (180, -0, 0)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, -2.220446049250313e-16, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def SphereLight "Shamal_Light_self_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                float inputs:intensity = 20
                float inputs:radius = 0.2
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (180, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.05999999999995431, -3.5, 1.6000000000706223)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def SphereLight "Shamal_Light_main_01" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                    float inputs:intensity = 30
                    float inputs:radius = 0.2
                    float inputs:shaping:cone:angle = 90
                    float inputs:shaping:cone:softness
                    float inputs:shaping:focus
                    color3f inputs:shaping:focusTint
                    asset inputs:shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    double3 xformOp:rotateXYZ = (180, -0, 0)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, -2.220446049250313e-16, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def SphereLight "Shamal_Light_self_04" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                float inputs:intensity = 20
                float inputs:radius = 0.2
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (180, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.05999999999991679, -5.345, 1.6000000000879027)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def SphereLight "Shamal_Light_main_01" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                    float inputs:intensity = 30
                    float inputs:radius = 0.2
                    float inputs:shaping:cone:angle = 90
                    float inputs:shaping:cone:softness
                    float inputs:shaping:focus
                    color3f inputs:shaping:focusTint
                    asset inputs:shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    double3 xformOp:rotateXYZ = (180, -0, 0)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, -2.220446049250313e-16, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }
        }
    }
}

