#usda 1.0
(
    defaultPrim = "Looks"
    metersPerUnit = 0.009999999776482582
    timeCodesPerSecond = 24
    upAxis = "Z"
)

def Scope "Looks"
{
    def Material "CJO_mat_0C5740A4C8A0A83D"
    {
        append token outputs:mdl:surface.connect = </Looks/CJO_mat_0C5740A4C8A0A83D/Shader.outputs:out>

        def Shader "Shader" (
            kind = "Material"
        )
        {
            uniform bool enable_opacity = 1
            uniform token info:implementationSource = "sourceAsset"
            uniform asset info:mdl:sourceAsset = @./AperturePBR_Opacity.mdl@
            uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Opacity"
            asset inputs:diffuse_texture = @../textures/CJO_0C5740A4C8A0A83D.dds@ (
                colorSpace = "auto"
                customData = {
                    asset default = @@
                }
                displayGroup = "Diffuse"
                displayName = "Albedo Map"
                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                hidden = false
            )
            token outputs:out
        }
    }
}