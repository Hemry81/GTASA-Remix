#usda 1.0
(
    upAxis = "Z"
)

over "RootNode"
{
    over "meshes"
    {
        over "mesh_7CBD40F69B3F1360" (
            references = @../../captures/meshes/mesh_7CBD40F69B3F1360.usd@
        )
        {
            rel material:binding = </RootNode/Looks/mat_6C623E5230AFF8CF> (
                bindMaterialAs = "weakerThanDescendants"
            )
            custom int preserveOriginalDrawCall = 1
            token visibility = "invisible"

            def RectLight "Airport_Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float height = 1
                bool inputs:normalize = 1
                float intensity = 100
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                float width = 4
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (21, 10.999999999999998, -9.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "Airport_Light_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float height = 1
                bool inputs:normalize = 1
                float intensity = 100
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                float width = 4
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (26, 11, -9.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "Airport_Light_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float height = 1
                bool inputs:normalize = 1
                float intensity = 100
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                float width = 4
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (31, 11, -9.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "Airport_Light_04" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float height = 1
                bool inputs:normalize = 1
                float intensity = 100
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                float width = 4
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (36, 11, -9.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "Airport_Light_05" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float height = 1
                bool inputs:normalize = 1
                float intensity = 100
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                float width = 4
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (41, 11, -9.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "Airport_Light_06" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float height = 1
                bool inputs:normalize = 1
                float intensity = 100
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                float width = 4
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (46, 11, -9.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "Airport_Light_07" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float height = 1
                bool inputs:normalize = 1
                float intensity = 100
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                float width = 4
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (21, 15.600000232458115, -8.200000122189522)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "Airport_Light_08" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float height = 1
                bool inputs:normalize = 1
                float intensity = 100
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                float width = 4
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (26, 15.600000232458115, -8.200000122189522)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "Airport_Light_09" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float height = 1
                bool inputs:normalize = 1
                float intensity = 100
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                float width = 4
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (31, 15.600000232458115, -8.200000122189522)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "Airport_Light_10" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float height = 1
                bool inputs:normalize = 1
                float intensity = 100
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                float width = 4
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (36, 15.600000232458115, -8.200000122189522)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "Airport_Light_11" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float height = 1
                bool inputs:normalize = 1
                float intensity = 100
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                float width = 4
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (41, 15.600000232458115, -8.200000122189522)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "Airport_Light_12" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float height = 1
                bool inputs:normalize = 1
                float intensity = 100
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                float width = 4
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (46, 15.600000232458115, -8.200000122189522)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            over "mesh"
            {
                normal3f[] normals (
                    interpolation = "vertex"
                )
                texCoord2f[] primvars:st = [(0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1)] (
                    interpolation = "vertex"
                )
            }
        }

        over "mesh_876C7E32ABEA5BB2" (
            payload = None
            references = @../../captures/meshes/mesh_876C7E32ABEA5BB2.usd@
        )
        {
            custom int preserveOriginalDrawCall = 1
            token visibility = "invisible"

            def RectLight "Luggage_Room_Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
                instanceable = false
            )
            {
                float height = 2.5
                bool inputs:normalize = 1
                float intensity = 100
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                float width = 4.5
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-16.2, 11.5, 2.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "Luggage_Room_Light_02" (
                prepend apiSchemas = ["ShapingAPI"]
                instanceable = false
            )
            {
                float height = 2.5
                bool inputs:normalize = 1
                float intensity = 100
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                float width = 4.5
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.65, 11.5, 2.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "Luggage_Room_Light_03" (
                prepend apiSchemas = ["ShapingAPI"]
                instanceable = false
            )
            {
                float height = 2.5
                bool inputs:normalize = 1
                float intensity = 100
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                float width = 4.5
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (10.9, 11.5, 2.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "Luggage_Room_Light_04" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float height = 2.5
                bool inputs:normalize = 1
                float intensity = 100
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                float width = 4.5
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (25, 11.5, 2.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "Luggage_Room_Light_05" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float height = 2.5
                bool inputs:normalize = 1
                float intensity = 100
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                float width = 4.5
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-16.2, -3.2, 2.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "Luggage_Room_Light_06" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float height = 2.5
                bool inputs:normalize = 1
                float intensity = 100
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                float width = 4.5
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.65, -3.2, 2.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "Luggage_Room_Light_07" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float height = 2.5
                bool inputs:normalize = 1
                float intensity = 100
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                float width = 4.5
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (10.9, -3.2, 2.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "Luggage_Room_Light_08" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float height = 2.5
                bool inputs:normalize = 1
                float intensity = 100
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                float width = 4.5
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (25, -3.2, 2.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "Luggage_Room_Light_09" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float height = 2.5
                bool inputs:normalize = 1
                float intensity = 100
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                float width = 4.5
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.66, 4.200000000000009, 2.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "Luggage_Room_Light_10" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float height = 2.5
                bool inputs:normalize = 1
                float intensity = 100
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                float width = 4.5
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (11.6, 4.199999999999997, 2.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            over "mesh"
            {
                normal3f[] normals (
                    interpolation = "vertex"
                )
                texCoord2f[] primvars:st = [(-3.870778, 2.8680682), (-3.870778, -2.1319318), (-3.8707752, 4.131984), (4.5042953, 4.297905), (4.5042953, 1.297905), (4.5042953, 3.864799), (4.5042953, 1.864799), (4.5042953, 4.86663), (4.5042953, 3.86663), (4.5042953, 4.2960734), (4.5042953, 1.2960734), (-3.9589615, 4.297907), (-3.9589615, 1.2979069), (-3.9589615, 3.8648012), (-3.9589615, 1.8648012), (-3.9589615, 4.866632), (-3.9589615, 3.866632), (-3.9589615, 4.2960753), (-3.9589615, 1.2960753), (4.5042934, 1.4231486), (-3.9589615, 1.4231508), (4.5042973, 4.343071), (-3.9589615, 4.343073), (-3.8707771, 1.4585836), (-3.8707771, -0.5414164), (-3.8707771, 1.2420309), (-3.8707771, -0.75796914), (-3.8707771, -1.7579691), (-0.023424566, 4.1319814), (0.97657543, 4.1319814), (-0.023427248, 2.8680654), (0.97657275, 2.8680654), (-0.87456274, 2.8680668), (1.1254373, 2.8680668), (3.1254373, 2.8680668), (-3.8745599, 4.131983), (-0.8745599, 4.131983), (1.1254401, 4.131983), (3.1254401, 4.131983), (-0.75554395, 2.8680649), (0.24445605, 2.8680649), (1.244456, 2.8680649), (3.870741, 4.131978), (3.870738, 2.868062), (3.870738, -2.131938), (3.870739, 2.4585772), (3.870739, 1.4585772), (3.870739, -0.54142284), (-2.0914178, 4.13198), (3.9085822, 4.13198), (-2.8235373, 2.8680634), (-0.82353735, 2.8680634), (-0.7555413, 4.131981), (1.2444587, 4.131981), (-3.6066766, 4.1319823), (-2.6066766, 4.1319823), (-3.6066794, 2.8680663), (0.39332056, 2.8680663), (-2.0914207, 2.868064), (3.9085793, 2.868064), (-2.8235345, 4.1319795), (-0.8235345, 4.1319795), (3.4858608, -1.8831341), (-3.137919, -1.8831303), (0.28786227, -1.8831322), (4.2878623, -1.8831322), (-3.8668008, -1.8831322), (1.1331992, -1.8831322), (3.4858608, 4.63774), (3.4858608, -2.3622599), (-3.137919, 4.637744), (-3.137919, -2.362256), (0.30910242, 4.637742), (0.30910242, -2.362258), (4.3091025, 4.637742), (4.3091025, -2.362258), (-3.8837686, 4.637742), (-3.8837686, -2.362258), (1.1162313, 4.637742), (1.1162313, -2.362258), (3.485859, 1.41191), (3.485859, -0.58808994), (-3.1379204, 1.4119139), (-3.1379204, -0.5880861), (0.30910116, 1.411912), (0.30910116, -0.58808804), (4.309101, 1.411912), (4.309101, -0.58808804), (-3.88377, 1.411912), (-3.88377, -0.58808804), (1.11623, 1.411912), (1.11623, -0.58808804), (3.485858, -2.3430948), (-3.1379213, -2.343091), (0.30385125, -2.343093), (4.303851, -2.343093), (-3.8794985, -2.343093), (1.1205016, -2.343093), (-3.0613823, -1.6341066), (-2.0613823, -1.6341066), (-3.5613823, -1.6341057), (-3.6098433, 4.8872566), (-0.60984325, 4.8872566), (-3.14915, 4.8872576), (-3.6097212, 1.5179939), (-0.6097212, 1.5179939), (-3.14915, 1.5179944), (-3.5613813, 4.8872566), (-2.5613813, 4.8872566), (-3.0613813, 4.887256), (-2.0613813, 4.887256), (-3.0613813, 2.9723392), (-2.0613813, 2.9723392), (-3.5613813, 1.5254402), (-2.5613813, 1.5254402), (-3.6611118, 4.8872576), (-3.6611137, 1.5179949), (-0.39707422, 4.8872557), (-0.3970747, 2.9723387), (-0.39707518, 0.55803204), (-3.0613823, 0.558033), (-2.0613823, 0.558033), (-0.39707565, -1.6341066), (3.870738, 0.0047807693), (3.870738, -1.9952192), (-3.815236, 4.133204), (-1.8152361, 4.133204), (-1.8409929, 4.1332026), (2.159007, 4.1332026), (-3.815236, 4.9992323), (-3.815236, -2.0007677), (-2.815236, -2.0007677), (-2.8409927, -2.0007696), (-1.8409927, -2.0007696), (-0.8409927, -2.0007696), (2.1590073, 4.9992304), (2.1590073, -2.0007696), (-3.8745618, -0.23044395), (-3.8745618, -1.230444), (-0.8745618, -0.23044395), (0.12543821, -0.23044395), (0.12543821, -1.230444), (-3.767323, -0.2304442), (-3.767323, -1.2304442), (-2.767323, -0.2304442), (-2.767323, -1.2304442), (-3.8745608, 1.9710941), (-0.87456083, 1.9710941), (0.12543917, 1.9710941), (-3.767261, 1.9861085), (-2.767261, 1.9861085), (0.23273897, 1.9861085), (-3.8152342, 3.5483043), (-2.8152342, 3.5483043), (-1.840991, 3.548303), (2.159009, 3.548303), (-3.8152342, 4.32162), (-3.8152342, 2.32162), (-1.8152342, 2.32162), (-2.840991, 2.321618), (-1.840991, 2.321618), (-0.840991, 2.321618), (2.159009, 4.321618), (2.159009, 2.321618), (-1.0860491, 4.1332026), (-0.08604908, 4.1332026), (1.8942976, 4.1332016), (2.8942976, 4.1332016), (-1.0860488, 4.9992304), (-1.0860488, -2.0007696), (-0.10570216, -2.0007706), (2.8942978, 4.9992294), (2.8942978, -2.0007706), (-0.023426354, -0.23044538), (-0.023426354, -1.2304454), (0.97657365, -0.23044538), (0.97657365, -1.2304454), (-1.755543, -0.23044562), (-1.755543, -1.2304456), (1.244457, -0.23044562), (1.244457, -1.2304456), (-0.02342558, 1.9861073), (0.9765744, 1.9861073), (-1.7555423, 1.9861071), (-0.7555423, 1.9861071), (0.24445772, 1.9861071), (1.2444577, 1.9861071), (-1.0860473, 3.5483024), (-0.08604729, 3.5483024), (1.8942995, 3.5483015), (2.8942995, 3.5483015), (-1.086047, 4.321618), (-1.086047, 2.321618), (0.8942995, 2.3216171), (2.8942995, 4.321617), (2.8942995, 2.3216171), (-3.2048235, 4.133201), (2.7951765, 4.133201), (3.7951765, 4.133201), (1.9692488, 4.1331997), (-3.204823, 4.9992285), (-3.204823, -2.0007715), (1.795177, -2.0007715), (-0.8235364, 4.9992285), (-0.8235364, -2.0007715), (-1.9267468, -0.23044682), (-1.9267468, -1.2304468), (3.0732532, -0.23044682), (3.0732532, -1.2304468), (-0.8235364, -0.23044705), (-0.8235364, -1.230447), (-1.9267459, 1.9861059), (3.073254, 1.9861059), (-0.82353544, 1.9861057), (-3.2048216, 3.548301), (1.7951784, 3.548301), (3.7951784, 3.548301), (-0.82353497, 3.5483005), (-3.2048216, 4.321616), (-3.2048216, 2.3216162), (2.7951784, 2.3216162), (1.9692507, 4.321615), (1.9692507, 2.3216152), (1.7530622, 4.133199), (1.7530622, -0.8668008), (1.7530622, -2.8668008), (3.7530622, 4.133199), (1.9692488, 4.9992275), (1.9692488, -2.0007725), (1.7530622, -2.000773), (3.7530622, -2.000773), (2.438488, -0.7579746), (2.438488, -1.7579746), (2.438488, 2.458578), (2.438488, 1.4585781), (1.7530642, 4.5482993), (1.7530642, 3.5482993), (3.7530642, 4.5482993), (3.7530642, 3.5482993), (1.7530642, 4.3216147), (1.7530642, 2.3216147), (3.7530642, 2.3216147), (1.9692507, 3.5482998), (-3.4428587, 2.32162), (-1.4428587, 4.32162), (-1.4428587, 2.32162), (-3.5663939, 3.5483046), (-2.5663939, 3.5483046), (-3.5663948, 1.4435682), (-2.5663948, 1.4435682), (-3.5663948, -0.7580309), (-3.5663948, -1.7580309), (-2.5663948, -0.7580309), (-2.5663948, -1.7580309), (-3.5663958, -2.0007677), (-2.5663958, -2.0007677), (-3.4428606, 4.1332045), (-1.4428606, 4.1332045), (-3.4428587, 4.5483046), (-3.4428587, 3.5483048), (-1.4428587, 4.5483046), (-1.4428587, 3.5483048), (-3.4428606, -2.0007677), (-1.4428606, 4.9992323), (-1.4428606, -0.0007677078), (-1.4428606, -2.0007677), (-3.8679695, -0.39591074), (-2.8679695, -0.39591074), (-2.8679695, 0.8591552), (-1.9803963, -0.37894344), (0.2018547, -0.37894464), (3.2018547, -0.37894464), (-1.980396, 0.8421869), (-0.98039603, 0.8421869), (1.201855, 0.84218574), (3.201855, 0.84218574), (-2.8300667, -0.3959129), (2.1699333, -0.3959129), (-2.8300667, 0.85915303), (2.1699333, 0.85915303), (3.1699333, 0.85915303), (-3.5043716, 4.2978916), (-3.5043716, 1.2978916), (-3.5043716, 4.2960606), (-3.5043716, 1.2960606), (4.958885, 4.2960587), (4.958885, 1.2960587), (4.958885, 4.2978897), (4.958885, 1.2978897), (-3.5043716, 4.866617), (-3.5043716, 3.8666172), (-3.5043716, 3.8647861), (-3.5043716, 1.8647861), (4.958885, 3.8647842), (4.958885, 1.8647842), (4.958885, 4.8666153), (4.958885, 3.8666153), (-3.5043697, 4.3430576), (4.958885, 4.3430557), (4.958885, 1.4231339), (-3.5043736, 1.4231358)] (
                    interpolation = "vertex"
                )
            }
        }

        over "mesh_2634ADCEE8C94B32" (
            references = @../../captures/meshes/mesh_2634ADCEE8C94B32.usd@
        )
        {
            custom int preserveOriginalDrawCall = 1
            token visibility = "invisible"

            def SphereLight "StreetLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float colorTemperature = 4500
                bool enableColorTemperature = 1
                bool inputs:normalize = 1
                float intensity = 1000
                bool light:enableCaustics = 0
                bool normalize = 0
                float radius = 0.3
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 2.8)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            over "mesh"
            {
                normal3f[] normals (
                    interpolation = "vertex"
                )
                texCoord2f[] primvars:st = [(0.2528348, -1.9180245), (0.7471652, -1.9180245), (0.18975073, -1.9180245), (0.87333226, -1.9180245), (0.12666768, -1.9180245), (0.81024826, -1.9180245), (0.2528348, -0.9921192), (0.7471652, -0.6549994), (0.7471652, -0.9921192), (0.12666777, 0.1795702), (0.18975088, -0.9921192), (0.87333226, -0.9921192), (0.12666768, -0.9921192), (0.12666768, -1.4895682), (0.8102484, -0.9921192), (0.3335002, -0.654999), (0.0010088432, -0.7500005), (0.0010088432, -1.7500005), (1.9389884, -1.079088), (1.9389884, -1.079088), (1.9389876, -0.75000083), (1.9389876, -1.750001), (0.0010089636, -1.083632), (0.0010089636, -1.083632), (1.9389876, -1.4209111), (1.9389876, -1.4209111), (0.0010088432, -1.4163675), (0.0010088432, -1.4163675), (0.0004994869, -1.9986563), (0.9995005, -1.9986563), (0.0004994869, -1.9986563), (0.99950033, -1.9986563), (0.0004994869, -1.9986563), (0.9995005, -1.9986563), (0.0004994869, -1.9165788), (0.9995005, -0.65500045), (0.9995005, -1.9165788), (0.0004994869, -1.9165788), (0.00049966574, 0.68865633), (0.99950033, -1.9165788), (0.0004994869, -1.9165788), (0.0004994869, -1.9986563), (0.9995005, -1.9165788), (0.33349985, -0.6550001), (1.9214267, -1.25), (1.9214267, -1.25), (2.018991, -1.5967636), (2.018991, -1.5967636), (2.018991, -1.25), (2.018991, -1.25), (1.9214267, -1.5967636), (1.9214267, -1.5967636), (2.018991, -0.9032364), (2.018991, -1.9032364), (1.9214267, -0.9032364), (1.9214267, -1.9032364), (0.9137557, -1.0048308), (0.9194249, -1.0027192), (0.9137557, -1.0048308), (0.9191769, -1.0053747), (0.9194249, -1.0027192), (0.9137557, -1.0048308), (0.9140038, -1.0021753), (0.9191769, -1.0053747), (0.9194249, -1.0027192), (0.9137557, -1.0048308), (0.9140038, -1.0021753), (0.9191769, -1.0053747), (0.9194249, -1.0027192), (0.9137557, -1.0048308), (0.9140038, -1.0021753), (0.9191769, -1.0053747), (0.9194249, -1.0027192), (0.9137557, -1.0048308), (0.9140038, -1.0021753), (0.9194249, -1.0027192), (0.9137557, -1.0048308), (0.9191769, -1.0053747), (0.9194249, -1.0027192), (0.9137557, -1.0048308), (0.9140038, -1.0021753), (0.9191769, -1.0053747), (0.9194249, -1.0027192), (0.9137557, -1.0048308), (0.9140038, -1.0021753), (0.9191769, -1.0053747), (0.9194249, -1.0027192), (0.9137557, -1.0048308), (0.9140038, -1.0021753), (0.9191769, -1.0053747), (0.9194249, -1.0027192), (0.9137557, -1.0048308), (0.9140038, -1.0021753), (0.9194249, -1.0027192), (0.9137557, -1.0048308), (0.9194249, -1.0027192)] (
                    interpolation = "vertex"
                )
            }
        }

        over "mesh_4C277D1761299A8B" (
            references = @../../captures/meshes/mesh_4C277D1761299A8B.usd@
        )
        {
            custom int preserveOriginalDrawCall = 1
            token visibility = "invisible"

            def RectLight "Street_Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float colorTemperature = 4500
                bool enableColorTemperature = 1
                float height = 0.15
                bool inputs:normalize = 1
                float intensity = 1000
                bool normalize = 0
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                token visibility = "invisible"
                bool visibleInPrimaryRay = 1
                float width = 0.8
                double3 xformOp:rotateYZX = (0, 6.300000096857548, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.46837010406790475, 0.013196293136559447, 3.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }
        }

        over "mesh_4C2489FAD0A31AB9" (
            references = @../../captures/meshes/mesh_4C2489FAD0A31AB9.usd@
        )
        {
            custom int preserveOriginalDrawCall = 1
            token visibility = "invisible"

            def DiskLight "StreetLightType4_Light" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float colorTemperature = 4500
                bool enableColorTemperature = 1
                bool inputs:normalize = 1
                float intensity = 1000
                bool normalize = 0
                float radius = 0.18
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.36, 0, 4.22)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            over "mesh"
            {
                normal3f[] normals (
                    interpolation = "vertex"
                )
                texCoord2f[] primvars:st = [(0.933044, -2.7989585), (0.7635006, -2.9534318), (0.5939572, -2.9534318), (0.42441368, -2.8902607), (0.29567143, -2.781662), (0.17357656, -2.685255), (0.031180406, -2.6072736), (0.95618117, -2.5996528), (0.9561811, -2.400347), (0.7635004, -2.0465682), (0.59395695, -2.0465684), (0.4244135, -2.1097393), (0.29567134, -2.2183383), (0.17357644, -2.3147452), (0.03118035, -2.3927267), (0.93304384, -2.2010412)] (
                    interpolation = "vertex"
                )
            }
        }

        over "mesh_5ED6BD34465B1EA4" (
            references = @../../captures/meshes/mesh_5ED6BD34465B1EA4.usd@
        )
        {
            custom int preserveOriginalDrawCall = 1
            token visibility = "inherited"
            float3 xformOp:rotateYZX = (0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]

            def RectLight "Tunnel_Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float colorTemperature = 4500
                bool enableColorTemperature = 1
                float height = 0.5
                bool inputs:normalize = 0
                float intensity = 500
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                float width = 2
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (67.85, -10.07, 3.7)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "Tunnel_Light_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float colorTemperature = 4500
                bool enableColorTemperature = 1
                float height = 0.5
                bool inputs:normalize = 0
                float intensity = 500
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                float width = 2
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (67.82168998261231, -10.03777034651046, 3.619341058189058)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }
        }

        over "mesh_2D3B3C25D765D1D2" (
            references = @../../captures/meshes/mesh_2D3B3C25D765D1D2.usd@
        )
        {
            custom int preserveOriginalDrawCall = 1
            token visibility = "invisible"

            def DiskLight "Pizza_Light" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 100
                bool normalize = 1
                float radius = 0.25
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0.08)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }
        }

        over "mesh_32040A04B8F232D5" (
            references = @../../captures/meshes/mesh_32040A04B8F232D5.usd@
        )
        {
            custom int preserveOriginalDrawCall = 1
            token visibility = "invisible"

            def SphereLight "Ad_light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 100
                bool normalize = 0
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (5.121494994067911, -4.229145472015239, 1.9328616384286996)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "Ad_light_02" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 0
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (4.890155860964456, -2.2291454720152397, 1.9328616384286996)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "Ad_light_03" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 0
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (4.656861689780138, -0.22914547201523927, 1.9328616384286996)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "Ad_light_04" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 0
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (4.41127486279349, 1.7708545279847585, 1.9328616384286996)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "Ad_light_05" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 0
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (4.1513181322205135, 3.77085452798476, 1.9328616384286996)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "Ad_light_06" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 0
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (3.889848836005955, 5.770854527984756, 1.9328616384286996)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "Ad_light_07" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 100
                bool normalize = 0
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (0, 0, -14.850482805853886)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-5.157133420057653, -4.21625609059747, 1.9328616384286994)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "Ad_light_08" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 0
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (0, 0, -14.850482805853886)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-4.868150313640318, -2.2237685602198116, 1.9328616384286994)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "Ad_light_09" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 0
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (0, 0, -14.850482805853886)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-4.581056943009183, -0.2307799584339736, 1.9328616384286994)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "Ad_light_10" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 0
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (0, 0, -14.850482805853886)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-4.305845628182515, 1.7653592205264417, 1.9328616384286994)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "Ad_light_11" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 0
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (0, 0, -14.850482805853886)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-4.044524232594155, 3.765181370113226, 1.9328616384286994)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "Ad_light_12" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 0
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (0, 0, -14.850482805853886)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-3.7846648798425817, 5.765391186520136, 1.9328616384286994)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            over "mesh"
            {
                normal3f[] normals (
                    interpolation = "vertex"
                )
                texCoord2f[] primvars:st = [(0.023514032, 4.9950047), (0.14321859, 0.14321232), (0.1638327, 4.9950037), (0.16383263, 4.9950037), (0.8567859, 0.14321232), (0.976492, 4.9950037), (0.02351427, 4.9950047), (0.14321879, 0.85678005), (0.8361614, 4.9950037), (0.8361613, 4.9950037), (0.8567861, 0.85678005), (0.97649217, 4.9950037), (0.023507833, -4.9950047), (0.14321396, 0.143219), (0.16383821, -4.9950037), (0.16383815, -4.9950037), (0.85678124, 0.143219), (0.9764858, -4.9950047), (0.023508072, -4.9950047), (0.14321412, 0.8567877), (0.83616686, -4.9950037), (0.83616686, -4.9950037), (0.8567814, 0.8567877), (0.97648597, -4.9950047), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (0, 0), (1, 0), (0, 0), (0, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (0, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (0, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (0, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (0, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (0, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (0, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (1, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (1, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (1, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (0, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (0, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (1, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (1, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (1, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (0, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5)] (
                    interpolation = "vertex"
                )
            }
        }

        over "mesh_40457909CA94A75C" (
            references = @../../captures/meshes/mesh_40457909CA94A75C.usd@
        )
        {
            custom int preserveOriginalDrawCall = 1
            token visibility = "invisible"

            def DiskLight "Signs_Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 100
                bool normalize = 0
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (0, -13.300000201165677, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.400000035762787, 0.10000000149011612, 4.300000067055225)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def DiskLight "Signs_Light_02" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 0
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (0, -13.300000201165677, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.400000035762787, -3.059999998509884, 4.300000067055225)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def DiskLight "Signs_Light_03" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 0
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (0, -13.300000201165677, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.400000035762787, -6.219999998509884, 4.300000067055225)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def DiskLight "Signs_Light_04" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 0
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (0, -13.300000201165677, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.400000035762787, -9.379999998509884, 4.300000067055225)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def DiskLight "Signs_Light_05" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 0
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (0, -13.300000201165677, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.400000035762787, -12.539999998509884, 4.300000067055225)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def DiskLight "Signs_Light_06" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 100
                bool normalize = 0
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (0, 13.5, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.394867956189859, 12.652934828289233, 4.300000067055232)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def DiskLight "Signs_Light_07" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 0
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (0, 13.5, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.394867956189822, 9.492934828289275, 4.300000067055264)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def DiskLight "Signs_Light_08" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 0
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (0, 13.5, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.3948679561898536, 6.332934828289323, 4.300000067055232)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def DiskLight "Signs_Light_09" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 0
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (0, 13.5, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.394867956189866, 3.172934828289162, 4.300000067055233)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def DiskLight "Signs_Light_10" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 0
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (0, 13.5, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.3948679561898483, 0.012934828289201228, 4.300000067055232)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            over "mesh"
            {
                normal3f[] normals (
                    interpolation = "vertex"
                )
                texCoord2f[] primvars:st = [(-4, -1), (0.49964154, 1.9985018), (0.49964154, -0.9985018), (6, -1), (-4, -1), (0.07568982, -0.9985018), (0.07568982, 1.9985018), (6, -1), (-4, -0.5), (0.07558112, 1.9985018), (5.9950047, 1.9985018), (0.07558112, -0.9985018), (5.9950047, -0.9985018), (6, -0.5), (-4, -0.5), (-3.9950047, -0.9985018), (0.49975026, -0.9985018), (-3.9950047, 1.9985018), (0.49975026, 1.9985018), (6, -0.5), (-4, -1), (0.49975026, 1.9985018), (0.49975026, -0.9985018), (6, -1), (-4, -1), (0.07558113, -0.9985018), (0.07558113, 1.9985018), (6, -1), (-4, -0.5), (0.07568981, 1.9985018), (5.9950037, 1.9985018), (0.07568981, -0.9985018), (5.9950037, -0.9985018), (6, -0.5), (-4, -0.5), (-3.9950047, -0.9985018), (0.49964154, -0.9985018), (-3.9950047, 1.9985018), (0.49964154, 1.9985018), (6, -0.5), (-4, -1), (0.499638, 1.9985018), (0.499638, -0.9985018), (6, -1), (-4, -1), (0.075692624, -0.9985018), (0.075692624, 1.9985018), (6, -1), (-4, -0.5), (0.07558057, 1.9985018), (5.9950037, 1.9985013), (0.07558057, -0.9985018), (5.9950037, -0.9985018), (6, -0.5), (-4, -0.5), (-3.9950051, -0.9985018), (0.49975005, -0.9985018), (-3.9950051, 1.9985013), (0.49975005, 1.9985018), (6, -0.5), (-4, -1), (0.49975044, 1.9985018), (0.49975044, -0.9985018), (6, -1), (-4, -1), (0.07558015, -0.9985018), (0.07558015, 1.9985018), (6, -1), (-4, -0.5), (0.075693026, 1.9985018), (5.9950037, 1.9985013), (0.075693026, -0.9985018), (5.9950037, -0.9985018), (6, -0.5), (-4, -0.5), (-3.995005, -0.9985018), (0.4996376, -0.9985018), (-3.995005, 1.9985013), (0.4996376, 1.9985018), (6, -0.5), (0.0004994571, -0.00049972534), (0.00049960613, -0.00049972534), (0.88799727, -0.00049972534), (0.0004993379, -0.99949837), (0.9995005, -0.9995012), (0.0019354224, -0.9995012), (0.99950016, -0.9995003), (0.0019352138, -0.9995003), (0.11311796, -0.00049972534), (0.9995003, -0.0005016327), (0, -1), (0.113072634, -0.00049972534), (0.9980649, -0.00049972534), (1, -0.5), (0, -0.5), (0.001934737, -0.35545063), (0, -1), (0.9995005, -0.35545063), (1, -0.5), (0, -0.5), (0.88804257, -0.00049972534), (0.9995005, -0.9995003), (1.999001, -0.3029623), (1.999001, -0.67445564), (0.0016417503, -0.3029623), (1.9983582, -0.20928955), (0.002174437, -0.6830902), (1.9978255, -0.79395866), (0.0025550127, -0.2159996), (0.0025550723, -0.79395866), (0.0025554895, -0.2944584), (0.0025555491, -0.70015526), (0.0019126534, -0.23499012), (1.9980874, -0.2944584), (0.0013797879, -0.78545475), (1.9986202, -0.7087908), (1.999001, -0.24170017), (1.999001, -0.78545475), (0.0004994571, -0.00049972534), (0.00049960613, -0.00049972534), (0.88799727, -0.00049972534), (0.0004993379, -0.99949837), (0.9995005, -0.9995012), (0.0019354224, -0.9995012), (0.99950016, -0.9995003), (0.0019352138, -0.9995003), (0.11311796, -0.00049972534), (0.9995003, -0.0005016327), (0, -1), (0.113072634, -0.00049972534), (0.9980649, -0.00049972534), (1, -0.5), (0, -0.5), (0.001934737, -0.35545063), (0, -1), (0.9995005, -0.35545063), (1, -0.5), (0, -0.5), (0.88804257, -0.00049972534), (0.9995005, -0.9995003), (1.999001, -0.3029623), (1.999001, -0.67445564), (0.0016417503, -0.3029623), (1.9983582, -0.20928955), (0.0019126534, -0.23499012), (1.9980874, -0.2944584), (0.0025554895, -0.2944584), (0.0025555491, -0.70015526), (0.002174437, -0.6830902), (1.9978255, -0.79395866), (0.0013797879, -0.78545475), (1.9986202, -0.7087908), (0.0025550127, -0.2159996), (0.0025550723, -0.79395866), (1.999001, -0.24170017), (1.999001, -0.78545475), (0.0004994571, -0.00049972534), (0.00049960613, -0.00049972534), (0.88799727, -0.00049972534), (0.0004993379, -0.99949837), (0.9995005, -0.9995012), (0.0019354224, -0.9995012), (0.99950016, -0.9995003), (0.0019352138, -0.9995003), (0.11311796, -0.00049972534), (0.9995003, -0.0005016327), (0, -1), (0.113072634, -0.00049972534), (0.9980649, -0.00049972534), (1, -0.5), (0, -0.5), (0.001934737, -0.35545063), (0, -1), (0.9995005, -0.35545063), (1, -0.5), (0, -0.5), (0.88804257, -0.00049972534), (0.9995005, -0.9995003), (1.999001, -0.3029623), (1.999001, -0.67445564), (0.0016417503, -0.3029623), (1.9983582, -0.20928955), (0.0019126534, -0.23499012), (1.9980874, -0.2944584), (0.0025554895, -0.2944584), (0.0025555491, -0.70015526), (0.002174437, -0.6830902), (1.9978255, -0.79395866), (0.0013797879, -0.78545475), (1.9986202, -0.7087908), (0.0025550127, -0.2159996), (0.0025550723, -0.79395866), (1.999001, -0.24170017), (1.999001, -0.78545475), (0.0004994571, -0.00049972534), (0.00049960613, -0.00049972534), (0.88799727, -0.00049972534), (0.0004993379, -0.99949837), (0.9995005, -0.9995012), (0.0019354224, -0.9995012), (0.99950016, -0.9995003), (0.0019352138, -0.9995003), (0.11311796, -0.00049972534), (0.9995003, -0.0005016327), (0, -1), (0.113072634, -0.00049972534), (0.9980649, -0.00049972534), (1, -0.5), (0, -0.5), (0.001934737, -0.35545063), (0, -1), (0.9995005, -0.35545063), (1, -0.5), (0, -0.5), (0.88804257, -0.00049972534), (0.9995005, -0.9995003), (1.999001, -0.3029623), (1.999001, -0.67445564), (0.0016417503, -0.3029623), (1.9983582, -0.20928955), (0.0019126534, -0.23499012), (1.9980874, -0.2944584), (0.0025554895, -0.2944584), (0.0025555491, -0.70015526), (0.002174437, -0.6830902), (1.9978255, -0.79395866), (0.0013797879, -0.78545475), (1.9986202, -0.7087908), (0.0025550127, -0.2159996), (0.0025550723, -0.79395866), (1.999001, -0.24170017), (1.999001, -0.78545475), (0.0004994571, -0.00049972534), (0.00049960613, -0.00049972534), (0.88799727, -0.00049972534), (0.0004993379, -0.99949837), (0.9995005, -0.9995012), (0.0019354224, -0.9995012), (0.99950016, -0.9995003), (0.0019352138, -0.9995003), (0.11311796, -0.00049972534), (0.9995003, -0.0005016327), (0, -1), (0.113072634, -0.00049972534), (0.9980649, -0.00049972534), (1, -0.5), (0, -0.5), (0.001934737, -0.35545063), (0, -1), (0.9995005, -0.35545063), (1, -0.5), (0, -0.5), (0.88804257, -0.00049972534), (0.9995005, -0.9995003), (1.999001, -0.3029623), (1.999001, -0.67445564), (0.0016417503, -0.3029623), (1.9983582, -0.20928955), (0.0019126534, -0.23499012), (1.9980874, -0.2944584), (0.0025554895, -0.2944584), (0.0025555491, -0.70015526), (0.002174437, -0.6830902), (1.9978255, -0.79395866), (0.0013797879, -0.78545475), (1.9986202, -0.7087908), (0.0025550127, -0.2159996), (0.0025550723, -0.79395866), (1.999001, -0.24170017), (1.999001, -0.78545475), (0.0004994571, -0.00049972534), (0.00049960613, -0.00049972534), (0.88799727, -0.00049972534), (0.0004993379, -0.99949837), (0.9995005, -0.9995012), (0.0019354224, -0.9995012), (0.99950016, -0.9995003), (0.0019352138, -0.9995003), (0.11311796, -0.00049972534), (0.9995003, -0.0005016327), (0, -1), (0.113072634, -0.00049972534), (0.9980649, -0.00049972534), (1, -0.5), (0, -0.5), (0.001934737, -0.35545063), (0, -1), (0.9995005, -0.35545063), (1, -0.5), (0, -0.5), (0.88804257, -0.00049972534), (0.9995005, -0.9995003), (1.999001, -0.3029623), (1.999001, -0.67445564), (0.0016417503, -0.3029623), (1.9983582, -0.20928955), (0.0019126534, -0.23499012), (1.9980874, -0.2944584), (0.0025554895, -0.2944584), (0.0025555491, -0.70015526), (0.002174437, -0.6830902), (1.9978255, -0.79395866), (0.0013797879, -0.78545475), (1.9986202, -0.7087908), (0.0025550127, -0.2159996), (0.0025550723, -0.79395866), (1.999001, -0.24170017), (1.999001, -0.78545475), (0.0004994571, -0.00049972534), (0.00049960613, -0.00049972534), (0.88799727, -0.00049972534), (0.0004993379, -0.99949837), (0.9995005, -0.9995012), (0.0019354224, -0.9995012), (0.99950016, -0.9995003), (0.0019352138, -0.9995003), (0.11311796, -0.00049972534), (0.9995003, -0.0005016327), (0, -1), (0.113072634, -0.00049972534), (0.9980649, -0.00049972534), (1, -0.5), (0, -0.5), (0.001934737, -0.35545063), (0, -1), (0.9995005, -0.35545063), (1, -0.5), (0, -0.5), (0.88804257, -0.00049972534), (0.9995005, -0.9995003), (1.999001, -0.3029623), (1.999001, -0.67445564), (0.0016417503, -0.3029623), (1.9983582, -0.20928955), (0.0019126534, -0.23499012), (1.9980874, -0.2944584), (0.0025554895, -0.2944584), (0.0025555491, -0.70015526), (0.002174437, -0.6830902), (1.9978255, -0.79395866), (0.0013797879, -0.78545475), (1.9986202, -0.7087908), (0.0025550127, -0.2159996), (0.0025550723, -0.79395866), (1.999001, -0.24170017), (1.999001, -0.78545475), (0.0004994571, -0.00049972534), (0.00049960613, -0.00049972534), (0.88799727, -0.00049972534), (0.0004993379, -0.99949837), (0.9995005, -0.9995012), (0.0019354224, -0.9995012), (0.99950016, -0.9995003), (0.0019352138, -0.9995003), (0.11311796, -0.00049972534), (0.9995003, -0.0005016327), (0, -1), (0.113072634, -0.00049972534), (0.9980649, -0.00049972534), (1, -0.5), (0, -0.5), (0.001934737, -0.35545063), (0, -1), (0.9995005, -0.35545063), (1, -0.5), (0, -0.5), (0.88804257, -0.00049972534), (0.9995005, -0.9995003), (1.999001, -0.3029623), (1.999001, -0.67445564), (0.0016417503, -0.3029623), (1.9983582, -0.20928955), (0.0019126534, -0.23499012), (1.9980874, -0.2944584), (0.0025554895, -0.2944584), (0.0025555491, -0.70015526), (0.002174437, -0.6830902), (1.9978255, -0.79395866), (0.0013797879, -0.78545475), (1.9986202, -0.7087908), (0.0025550127, -0.2159996), (0.0025550723, -0.79395866), (1.999001, -0.24170017), (1.999001, -0.78545475), (0.0004994571, -0.00049972534), (0.00049960613, -0.00049972534), (0.88799727, -0.00049972534), (0.0004993379, -0.99949837), (0.9995005, -0.9995012), (0.0019354224, -0.9995012), (0.99950016, -0.9995003), (0.0019352138, -0.9995003), (0.11311796, -0.00049972534), (0.9995003, -0.0005016327), (0, -1), (0.113072634, -0.00049972534), (0.9980649, -0.00049972534), (1, -0.5), (0, -0.5), (0.001934737, -0.35545063), (0, -1), (0.9995005, -0.35545063), (1, -0.5), (0, -0.5), (0.88804257, -0.00049972534), (0.9995005, -0.9995003), (1.999001, -0.3029623), (1.999001, -0.67445564), (0.0016417503, -0.3029623), (1.9983582, -0.20928955), (0.0019126534, -0.23499012), (1.9980874, -0.2944584), (0.0025554895, -0.2944584), (0.0025555491, -0.70015526), (0.002174437, -0.6830902), (1.9978255, -0.79395866), (0.0013797879, -0.78545475), (1.9986202, -0.7087908), (0.0025550127, -0.2159996), (0.0025550723, -0.79395866), (1.999001, -0.24170017), (1.999001, -0.78545475), (0.0004994571, -0.00049972534), (0.00049960613, -0.00049972534), (0.88799727, -0.00049972534), (0.0004993379, -0.99949837), (0.9995005, -0.9995012), (0.0019354224, -0.9995012), (0.99950016, -0.9995003), (0.0019352138, -0.9995003), (0.11311796, -0.00049972534), (0.9995003, -0.0005016327), (0, -1), (0.113072634, -0.00049972534), (0.9980649, -0.00049972534), (1, -0.5), (0, -0.5), (0.001934737, -0.35545063), (0, -1), (0.9995005, -0.35545063), (1, -0.5), (0, -0.5), (0.88804257, -0.00049972534), (0.9995005, -0.9995003), (1.999001, -0.3029623), (1.999001, -0.67445564), (0.0016417503, -0.3029623), (1.9983582, -0.20928955), (0.0019126534, -0.23499012), (1.9980874, -0.2944584), (0.0025554895, -0.2944584), (0.0025555491, -0.70015526), (0.002174437, -0.6830902), (1.9978255, -0.79395866), (0.0013797879, -0.78545475), (1.9986202, -0.7087908), (0.0025550127, -0.2159996), (0.0025550723, -0.79395866), (1.999001, -0.24170017), (1.999001, -0.78545475)] (
                    interpolation = "vertex"
                )
            }
        }

        over "mesh_B8EA0EF3A1DB16C3"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Street_Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float colorTemperature = 4500
                bool enableColorTemperature = 1
                float intensity = 1000
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (3.2, 0, 4.8)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "Street_Light_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float colorTemperature = 4500
                bool enableColorTemperature = 1
                float intensity = 1000
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-3.2, 0, 4.8)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }
        }

        over "mesh_490B788A5B361C35"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 100
                bool normalize = 1
                float radius = 0.3
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.65, 0, 4.4)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }
        }

        over "mesh_DDE358953FAE5244"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "CJHouse_Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 500
                bool normalize = 0
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.4000000059604645, 0.10000000149011612, 3.0000000447034836)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "CJHouse_Light_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 300
                bool normalize = 0
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.3000000342726707, -10.6, 2.9)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "CJHouse_Light_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 300
                bool normalize = 0
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (4.6000000685453415, -8.400000125169754, 6.70000009983778)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "CJHouse_Light_04" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 300
                bool normalize = 0
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.8000000268220901, -8.400000125169754, 6.70000009983778)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "CJHouse_Light_05" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 300
                bool normalize = 0
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.6000000089406967, -3.500000052154064, 6.70000009983778)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }
        }

        over "mesh_4CDA2E8D01C0B02A"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "CJHouse_Light_06" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 200
                bool normalize = 0
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.42, -0.51, 1.5000000223517418)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }
        }

        over "mesh_446A3B66C3CDC0D6"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "RyderHouse_Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 300
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.01, 1.76, 0.7000000104308128)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "RyderHouse_Light_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 300
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.26, -4.065, 0.20000000298023224)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }
        }

        over "mesh_C0CDC7A210930E3D"
        {
            custom int preserveOriginalDrawCall = 1

            def DiskLight "Salon_Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 100
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.9000000283122063, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def DiskLight "Salon_Light_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 100
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.8000000417232513, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def DiskLight "Salon_Light_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 100
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (3.7000000551342964, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def DiskLight "Salon_Light_04" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 100
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.0000000298023224, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def DiskLight "Salon_Light_05" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 100
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.8000000417232513, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def DiskLight "Salon_Light_06" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 100
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-3.7000000551342964, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }
        }

        over "mesh_4AA5F1430BA14BE9"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "StreetLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float colorTemperature = 4500
                bool enableColorTemperature = 1
                float intensity = 1000
                bool normalize = 0
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.1000000312924385, 0.10000000149011612, 7.500000111758709)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }
        }

        over "mesh_64863E93700A6B75"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "StreetLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float colorTemperature = 4500
                float diffuse = 1
                bool enableColorTemperature = 1
                float intensity = 1000
                bool normalize = 0
                float radius = 1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.600000023841858, -2.9000000432133675, 9.600000143051147)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "StreetLight_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float colorTemperature = 4500
                float diffuse = 1
                bool enableColorTemperature = 1
                float intensity = 1000
                bool normalize = 0
                float radius = 1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.600000023841858, 3.0000000447034836, 9.600000143051147)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "StreetLight_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float colorTemperature = 4500
                float diffuse = 1
                bool enableColorTemperature = 1
                float intensity = 1000
                bool normalize = 0
                float radius = 1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (3.300000049173832, 0.10000000149011612, 9.600000143051147)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }
        }

        over "mesh_706574B969F892AA"
        {
            custom int preserveOriginalDrawCall = 1

            def RectLight "StreetLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float colorTemperature = 4500
                bool enableColorTemperature = 1
                float height = 0.5
                float intensity = 1000
                bool normalize = 0
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                float width = 1
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-7.300000108778477, 0, 11.10000016540289)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "StreetLight_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float colorTemperature = 4500
                bool enableColorTemperature = 1
                float height = 0.5
                float intensity = 1000
                bool normalize = 0
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                float width = 1
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (7.3, 0, 11.10000016540289)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }
        }
    }

    over "Looks"
    {
        over "mat_24E3AC08C370B770"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./texture/props/24E3AC08C370B770_albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                )
                float inputs:emissive_intensity = 300 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./texture/props/24E3AC08C370B770_emissive.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emissive"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
                asset inputs:normalmap_texture = @./texture/props/24E3AC08C370B770_normal.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                )
                asset inputs:reflectionroughness_texture = @./texture/props/24E3AC08C370B770_rough.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Map"
                    hidden = false
                )
            }
        }
    }
}

