#usda 1.0
(
    subLayers = [
        @./Light/StreetLight.usda@,
        @./Light/Barber_Shop.usda@,
        @./Light/Casino_Police_Station.usda@,
        @./Light/CJ_House.usda@,
        @./Light/Airport_Terminal.usda@,
        @./Light/Inside_Track.usda@,
        @./Light/Sweet_House.usda@,
        @./Light/Ganton_Gym.usda@,
        @./Light/Binco.usda@,
        @./Light/Ammu_Nation.usda@,
        @./Light/House_02.usda@,
        @./Light/House_01.usda@,
        @./Light/Plane_Cargo.usda@,
        @./Light/Shamal.usda@,
        @./Light/No_Mans_Land.usda@,
        @./Light/Airport_Tunnel_Light_only.usda@,
        @./Light/Shop_24-7.usda@,
        @./Light/Disco_Light.usda@
    ]
    upAxis = "Z"
)

over "RootNode"
{
    over "meshes"
    {
        over "mesh_5ED6BD34465B1EA4"
        {
            custom int preserveOriginalDrawCall = 1
            token visibility = "inherited"
            float3 xformOp:rotateYZX = (0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]

            def RectLight "Tunnel_Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float colorTemperature = 4500
                bool enableColorTemperature = 1
                float height = 0.5
                bool inputs:normalize = 0
                float intensity = 300
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                float width = 2
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (67.85, -10.07, 3.7)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "Tunnel_Light_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float colorTemperature = 4500
                bool enableColorTemperature = 1
                float height = 0.5
                bool inputs:normalize = 0
                float intensity = 300
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                float width = 2
                double3 xformOp:rotateYZX = (0, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (67.82168998261231, -10.03777034651046, 3.619341058189058)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }
        }

        over "mesh_32040A04B8F232D5"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Ad_light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 100
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (5.121494994067911, -4.229145472015239, 1.9328616384286996)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "Ad_light_02" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (4.890155860964456, -2.2291454720152397, 1.9328616384286996)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "Ad_light_03" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (4.656861689780138, -0.22914547201523927, 1.9328616384286996)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "Ad_light_04" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (4.41127486279349, 1.7708545279847585, 1.9328616384286996)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "Ad_light_05" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (4.1513181322205135, 3.77085452798476, 1.9328616384286996)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "Ad_light_06" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (3.889848836005955, 5.770854527984756, 1.9328616384286996)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "Ad_light_07" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 100
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, 0, -14.850482805853886)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-5.157133420057653, -4.21625609059747, 1.9328616384286994)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "Ad_light_08" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, 0, -14.850482805853886)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-4.868150313640318, -2.2237685602198116, 1.9328616384286994)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "Ad_light_09" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, 0, -14.850482805853886)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-4.581056943009183, -0.2307799584339736, 1.9328616384286994)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "Ad_light_10" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, 0, -14.850482805853886)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-4.305845628182515, 1.7653592205264417, 1.9328616384286994)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "Ad_light_11" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, 0, -14.850482805853886)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-4.044524232594155, 3.765181370113226, 1.9328616384286994)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "Ad_light_12" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 100
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, 0, -14.850482805853886)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-3.7846648798425817, 5.765391186520136, 1.9328616384286994)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            over "mesh"
            {
                normal3f[] normals (
                    interpolation = "vertex"
                )
                texCoord2f[] primvars:st = [(0.023514032, 4.9950047), (0.14321859, 0.14321232), (0.1638327, 4.9950037), (0.16383263, 4.9950037), (0.8567859, 0.14321232), (0.976492, 4.9950037), (0.02351427, 4.9950047), (0.14321879, 0.85678005), (0.8361614, 4.9950037), (0.8361613, 4.9950037), (0.8567861, 0.85678005), (0.97649217, 4.9950037), (0.023507833, -4.9950047), (0.14321396, 0.143219), (0.16383821, -4.9950037), (0.16383815, -4.9950037), (0.85678124, 0.143219), (0.9764858, -4.9950047), (0.023508072, -4.9950047), (0.14321412, 0.8567877), (0.83616686, -4.9950037), (0.83616686, -4.9950037), (0.8567814, 0.8567877), (0.97648597, -4.9950047), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (0, 1), (0, 0), (0, 0), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0.2112323, 1), (0.2112323, 0), (0.2112323, 0), (0.26396015, 1), (0.26396015, 1), (0.7360399, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (0, 0), (1, 0), (0, 0), (0, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (0, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (0, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (0, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (0, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (0, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (0, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (1, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (1, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (1, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (0, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (0, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (1, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (1, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (1, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5), (0, 0), (0, 0), (1, 0), (0, 0), (0, 0), (1, 0), (0.39754108, 2), (0.39754108, 3), (0.81, 3), (0.81, 2), (0.81, 3), (0, 0.5), (0.39754108, -2), (0.39754108, -3), (1, 0.5), (0, 0.5), (0.39754108, -2.2299995), (0.81, -2.2305326), (1, 0.5), (1, 0.5), (0, 0.5), (0.81, -2), (1, 0.5)] (
                    interpolation = "vertex"
                )
            }
        }

        over "mesh_40457909CA94A75C"
        {
            custom int preserveOriginalDrawCall = 1

            over "mesh"
            {
                normal3f[] normals (
                    interpolation = "vertex"
                )
                texCoord2f[] primvars:st = [(-4, -1), (0.49964154, 1.9985018), (0.49964154, -0.9985018), (6, -1), (-4, -1), (0.07568982, -0.9985018), (0.07568982, 1.9985018), (6, -1), (-4, -0.5), (0.07558112, 1.9985018), (5.9950047, 1.9985018), (0.07558112, -0.9985018), (5.9950047, -0.9985018), (6, -0.5), (-4, -0.5), (-3.9950047, -0.9985018), (0.49975026, -0.9985018), (-3.9950047, 1.9985018), (0.49975026, 1.9985018), (6, -0.5), (-4, -1), (0.49975026, 1.9985018), (0.49975026, -0.9985018), (6, -1), (-4, -1), (0.07558113, -0.9985018), (0.07558113, 1.9985018), (6, -1), (-4, -0.5), (0.07568981, 1.9985018), (5.9950037, 1.9985018), (0.07568981, -0.9985018), (5.9950037, -0.9985018), (6, -0.5), (-4, -0.5), (-3.9950047, -0.9985018), (0.49964154, -0.9985018), (-3.9950047, 1.9985018), (0.49964154, 1.9985018), (6, -0.5), (-4, -1), (0.499638, 1.9985018), (0.499638, -0.9985018), (6, -1), (-4, -1), (0.075692624, -0.9985018), (0.075692624, 1.9985018), (6, -1), (-4, -0.5), (0.07558057, 1.9985018), (5.9950037, 1.9985013), (0.07558057, -0.9985018), (5.9950037, -0.9985018), (6, -0.5), (-4, -0.5), (-3.9950051, -0.9985018), (0.49975005, -0.9985018), (-3.9950051, 1.9985013), (0.49975005, 1.9985018), (6, -0.5), (-4, -1), (0.49975044, 1.9985018), (0.49975044, -0.9985018), (6, -1), (-4, -1), (0.07558015, -0.9985018), (0.07558015, 1.9985018), (6, -1), (-4, -0.5), (0.075693026, 1.9985018), (5.9950037, 1.9985013), (0.075693026, -0.9985018), (5.9950037, -0.9985018), (6, -0.5), (-4, -0.5), (-3.995005, -0.9985018), (0.4996376, -0.9985018), (-3.995005, 1.9985013), (0.4996376, 1.9985018), (6, -0.5), (0.0004994571, -0.00049972534), (0.00049960613, -0.00049972534), (0.88799727, -0.00049972534), (0.0004993379, -0.99949837), (0.9995005, -0.9995012), (0.0019354224, -0.9995012), (0.99950016, -0.9995003), (0.0019352138, -0.9995003), (0.11311796, -0.00049972534), (0.9995003, -0.0005016327), (0, -1), (0.113072634, -0.00049972534), (0.9980649, -0.00049972534), (1, -0.5), (0, -0.5), (0.001934737, -0.35545063), (0, -1), (0.9995005, -0.35545063), (1, -0.5), (0, -0.5), (0.88804257, -0.00049972534), (0.9995005, -0.9995003), (1.999001, -0.3029623), (1.999001, -0.67445564), (0.0016417503, -0.3029623), (1.9983582, -0.20928955), (0.002174437, -0.6830902), (1.9978255, -0.79395866), (0.0025550127, -0.2159996), (0.0025550723, -0.79395866), (0.0025554895, -0.2944584), (0.0025555491, -0.70015526), (0.0019126534, -0.23499012), (1.9980874, -0.2944584), (0.0013797879, -0.78545475), (1.9986202, -0.7087908), (1.999001, -0.24170017), (1.999001, -0.78545475), (0.0004994571, -0.00049972534), (0.00049960613, -0.00049972534), (0.88799727, -0.00049972534), (0.0004993379, -0.99949837), (0.9995005, -0.9995012), (0.0019354224, -0.9995012), (0.99950016, -0.9995003), (0.0019352138, -0.9995003), (0.11311796, -0.00049972534), (0.9995003, -0.0005016327), (0, -1), (0.113072634, -0.00049972534), (0.9980649, -0.00049972534), (1, -0.5), (0, -0.5), (0.001934737, -0.35545063), (0, -1), (0.9995005, -0.35545063), (1, -0.5), (0, -0.5), (0.88804257, -0.00049972534), (0.9995005, -0.9995003), (1.999001, -0.3029623), (1.999001, -0.67445564), (0.0016417503, -0.3029623), (1.9983582, -0.20928955), (0.0019126534, -0.23499012), (1.9980874, -0.2944584), (0.0025554895, -0.2944584), (0.0025555491, -0.70015526), (0.002174437, -0.6830902), (1.9978255, -0.79395866), (0.0013797879, -0.78545475), (1.9986202, -0.7087908), (0.0025550127, -0.2159996), (0.0025550723, -0.79395866), (1.999001, -0.24170017), (1.999001, -0.78545475), (0.0004994571, -0.00049972534), (0.00049960613, -0.00049972534), (0.88799727, -0.00049972534), (0.0004993379, -0.99949837), (0.9995005, -0.9995012), (0.0019354224, -0.9995012), (0.99950016, -0.9995003), (0.0019352138, -0.9995003), (0.11311796, -0.00049972534), (0.9995003, -0.0005016327), (0, -1), (0.113072634, -0.00049972534), (0.9980649, -0.00049972534), (1, -0.5), (0, -0.5), (0.001934737, -0.35545063), (0, -1), (0.9995005, -0.35545063), (1, -0.5), (0, -0.5), (0.88804257, -0.00049972534), (0.9995005, -0.9995003), (1.999001, -0.3029623), (1.999001, -0.67445564), (0.0016417503, -0.3029623), (1.9983582, -0.20928955), (0.0019126534, -0.23499012), (1.9980874, -0.2944584), (0.0025554895, -0.2944584), (0.0025555491, -0.70015526), (0.002174437, -0.6830902), (1.9978255, -0.79395866), (0.0013797879, -0.78545475), (1.9986202, -0.7087908), (0.0025550127, -0.2159996), (0.0025550723, -0.79395866), (1.999001, -0.24170017), (1.999001, -0.78545475), (0.0004994571, -0.00049972534), (0.00049960613, -0.00049972534), (0.88799727, -0.00049972534), (0.0004993379, -0.99949837), (0.9995005, -0.9995012), (0.0019354224, -0.9995012), (0.99950016, -0.9995003), (0.0019352138, -0.9995003), (0.11311796, -0.00049972534), (0.9995003, -0.0005016327), (0, -1), (0.113072634, -0.00049972534), (0.9980649, -0.00049972534), (1, -0.5), (0, -0.5), (0.001934737, -0.35545063), (0, -1), (0.9995005, -0.35545063), (1, -0.5), (0, -0.5), (0.88804257, -0.00049972534), (0.9995005, -0.9995003), (1.999001, -0.3029623), (1.999001, -0.67445564), (0.0016417503, -0.3029623), (1.9983582, -0.20928955), (0.0019126534, -0.23499012), (1.9980874, -0.2944584), (0.0025554895, -0.2944584), (0.0025555491, -0.70015526), (0.002174437, -0.6830902), (1.9978255, -0.79395866), (0.0013797879, -0.78545475), (1.9986202, -0.7087908), (0.0025550127, -0.2159996), (0.0025550723, -0.79395866), (1.999001, -0.24170017), (1.999001, -0.78545475), (0.0004994571, -0.00049972534), (0.00049960613, -0.00049972534), (0.88799727, -0.00049972534), (0.0004993379, -0.99949837), (0.9995005, -0.9995012), (0.0019354224, -0.9995012), (0.99950016, -0.9995003), (0.0019352138, -0.9995003), (0.11311796, -0.00049972534), (0.9995003, -0.0005016327), (0, -1), (0.113072634, -0.00049972534), (0.9980649, -0.00049972534), (1, -0.5), (0, -0.5), (0.001934737, -0.35545063), (0, -1), (0.9995005, -0.35545063), (1, -0.5), (0, -0.5), (0.88804257, -0.00049972534), (0.9995005, -0.9995003), (1.999001, -0.3029623), (1.999001, -0.67445564), (0.0016417503, -0.3029623), (1.9983582, -0.20928955), (0.0019126534, -0.23499012), (1.9980874, -0.2944584), (0.0025554895, -0.2944584), (0.0025555491, -0.70015526), (0.002174437, -0.6830902), (1.9978255, -0.79395866), (0.0013797879, -0.78545475), (1.9986202, -0.7087908), (0.0025550127, -0.2159996), (0.0025550723, -0.79395866), (1.999001, -0.24170017), (1.999001, -0.78545475), (0.0004994571, -0.00049972534), (0.00049960613, -0.00049972534), (0.88799727, -0.00049972534), (0.0004993379, -0.99949837), (0.9995005, -0.9995012), (0.0019354224, -0.9995012), (0.99950016, -0.9995003), (0.0019352138, -0.9995003), (0.11311796, -0.00049972534), (0.9995003, -0.0005016327), (0, -1), (0.113072634, -0.00049972534), (0.9980649, -0.00049972534), (1, -0.5), (0, -0.5), (0.001934737, -0.35545063), (0, -1), (0.9995005, -0.35545063), (1, -0.5), (0, -0.5), (0.88804257, -0.00049972534), (0.9995005, -0.9995003), (1.999001, -0.3029623), (1.999001, -0.67445564), (0.0016417503, -0.3029623), (1.9983582, -0.20928955), (0.0019126534, -0.23499012), (1.9980874, -0.2944584), (0.0025554895, -0.2944584), (0.0025555491, -0.70015526), (0.002174437, -0.6830902), (1.9978255, -0.79395866), (0.0013797879, -0.78545475), (1.9986202, -0.7087908), (0.0025550127, -0.2159996), (0.0025550723, -0.79395866), (1.999001, -0.24170017), (1.999001, -0.78545475), (0.0004994571, -0.00049972534), (0.00049960613, -0.00049972534), (0.88799727, -0.00049972534), (0.0004993379, -0.99949837), (0.9995005, -0.9995012), (0.0019354224, -0.9995012), (0.99950016, -0.9995003), (0.0019352138, -0.9995003), (0.11311796, -0.00049972534), (0.9995003, -0.0005016327), (0, -1), (0.113072634, -0.00049972534), (0.9980649, -0.00049972534), (1, -0.5), (0, -0.5), (0.001934737, -0.35545063), (0, -1), (0.9995005, -0.35545063), (1, -0.5), (0, -0.5), (0.88804257, -0.00049972534), (0.9995005, -0.9995003), (1.999001, -0.3029623), (1.999001, -0.67445564), (0.0016417503, -0.3029623), (1.9983582, -0.20928955), (0.0019126534, -0.23499012), (1.9980874, -0.2944584), (0.0025554895, -0.2944584), (0.0025555491, -0.70015526), (0.002174437, -0.6830902), (1.9978255, -0.79395866), (0.0013797879, -0.78545475), (1.9986202, -0.7087908), (0.0025550127, -0.2159996), (0.0025550723, -0.79395866), (1.999001, -0.24170017), (1.999001, -0.78545475), (0.0004994571, -0.00049972534), (0.00049960613, -0.00049972534), (0.88799727, -0.00049972534), (0.0004993379, -0.99949837), (0.9995005, -0.9995012), (0.0019354224, -0.9995012), (0.99950016, -0.9995003), (0.0019352138, -0.9995003), (0.11311796, -0.00049972534), (0.9995003, -0.0005016327), (0, -1), (0.113072634, -0.00049972534), (0.9980649, -0.00049972534), (1, -0.5), (0, -0.5), (0.001934737, -0.35545063), (0, -1), (0.9995005, -0.35545063), (1, -0.5), (0, -0.5), (0.88804257, -0.00049972534), (0.9995005, -0.9995003), (1.999001, -0.3029623), (1.999001, -0.67445564), (0.0016417503, -0.3029623), (1.9983582, -0.20928955), (0.0019126534, -0.23499012), (1.9980874, -0.2944584), (0.0025554895, -0.2944584), (0.0025555491, -0.70015526), (0.002174437, -0.6830902), (1.9978255, -0.79395866), (0.0013797879, -0.78545475), (1.9986202, -0.7087908), (0.0025550127, -0.2159996), (0.0025550723, -0.79395866), (1.999001, -0.24170017), (1.999001, -0.78545475), (0.0004994571, -0.00049972534), (0.00049960613, -0.00049972534), (0.88799727, -0.00049972534), (0.0004993379, -0.99949837), (0.9995005, -0.9995012), (0.0019354224, -0.9995012), (0.99950016, -0.9995003), (0.0019352138, -0.9995003), (0.11311796, -0.00049972534), (0.9995003, -0.0005016327), (0, -1), (0.113072634, -0.00049972534), (0.9980649, -0.00049972534), (1, -0.5), (0, -0.5), (0.001934737, -0.35545063), (0, -1), (0.9995005, -0.35545063), (1, -0.5), (0, -0.5), (0.88804257, -0.00049972534), (0.9995005, -0.9995003), (1.999001, -0.3029623), (1.999001, -0.67445564), (0.0016417503, -0.3029623), (1.9983582, -0.20928955), (0.0019126534, -0.23499012), (1.9980874, -0.2944584), (0.0025554895, -0.2944584), (0.0025555491, -0.70015526), (0.002174437, -0.6830902), (1.9978255, -0.79395866), (0.0013797879, -0.78545475), (1.9986202, -0.7087908), (0.0025550127, -0.2159996), (0.0025550723, -0.79395866), (1.999001, -0.24170017), (1.999001, -0.78545475), (0.0004994571, -0.00049972534), (0.00049960613, -0.00049972534), (0.88799727, -0.00049972534), (0.0004993379, -0.99949837), (0.9995005, -0.9995012), (0.0019354224, -0.9995012), (0.99950016, -0.9995003), (0.0019352138, -0.9995003), (0.11311796, -0.00049972534), (0.9995003, -0.0005016327), (0, -1), (0.113072634, -0.00049972534), (0.9980649, -0.00049972534), (1, -0.5), (0, -0.5), (0.001934737, -0.35545063), (0, -1), (0.9995005, -0.35545063), (1, -0.5), (0, -0.5), (0.88804257, -0.00049972534), (0.9995005, -0.9995003), (1.999001, -0.3029623), (1.999001, -0.67445564), (0.0016417503, -0.3029623), (1.9983582, -0.20928955), (0.0019126534, -0.23499012), (1.9980874, -0.2944584), (0.0025554895, -0.2944584), (0.0025555491, -0.70015526), (0.002174437, -0.6830902), (1.9978255, -0.79395866), (0.0013797879, -0.78545475), (1.9986202, -0.7087908), (0.0025550127, -0.2159996), (0.0025550723, -0.79395866), (1.999001, -0.24170017), (1.999001, -0.78545475)] (
                    interpolation = "vertex"
                )
            }

            def DiskLight "Signs_Light_self_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 10
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, -90, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.400000035762787, 0.10000000149011612, 4.300000067055225)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]

                def RectLight "Signs_Light_main_01" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float height = 1
                    float intensity = 20
                    bool isProjector = 0
                    bool normalize = 1
                    float shaping:cone:angle = 90
                    float shaping:cone:softness
                    float shaping:focus
                    color3f shaping:focusTint
                    asset shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    float width = 1
                    double3 xformOp:rotateXYZ = (90, 0, 90)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def DiskLight "Signs_Light_self_02" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 10
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, -90, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.400000035762787, -3.059999998509884, 4.300000067055225)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]

                def RectLight "Signs_Light_main_02" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float height = 1
                    float intensity = 20
                    bool normalize = 1
                    float shaping:cone:angle = 90
                    float shaping:cone:softness
                    float shaping:focus
                    color3f shaping:focusTint
                    asset shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    float width = 1
                    double3 xformOp:rotateXYZ = (90, 0, 90)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def DiskLight "Signs_Light_self_03" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 10
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, -90, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.400000035762787, -6.219999998509884, 4.300000067055225)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]

                def RectLight "Signs_Light_main_03" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float height = 1
                    float intensity = 20
                    bool normalize = 1
                    float shaping:cone:angle = 90
                    float shaping:cone:softness
                    float shaping:focus
                    color3f shaping:focusTint
                    asset shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    float width = 1
                    double3 xformOp:rotateXYZ = (90, 0, 90)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def DiskLight "Signs_Light_self_04" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 10
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, -90, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.400000035762787, -9.379999998509884, 4.300000067055225)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]

                def RectLight "Signs_Light_main_04" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float height = 1
                    float intensity = 20
                    bool normalize = 1
                    float shaping:cone:angle = 90
                    float shaping:cone:softness
                    float shaping:focus
                    color3f shaping:focusTint
                    asset shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    float width = 1
                    double3 xformOp:rotateXYZ = (90, 0, 90)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def DiskLight "Signs_Light_self_05" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 10
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, -90, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.400000035762787, -12.539999998509884, 4.300000067055225)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]

                def RectLight "Signs_Light_main_05" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float height = 1
                    float intensity = 20
                    bool normalize = 1
                    float shaping:cone:angle = 90
                    float shaping:cone:softness
                    float shaping:focus
                    color3f shaping:focusTint
                    asset shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    float width = 1
                    double3 xformOp:rotateXYZ = (90, 0, 90)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def DiskLight "Signs_Light_self_06" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 10
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, -90, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.394867956189859, 12.652934828289233, 4.300000067055232)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]

                def RectLight "Signs_Light_main_06" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float height = 1
                    float intensity = 20
                    bool normalize = 1
                    float shaping:cone:angle = 90
                    float shaping:cone:softness
                    float shaping:focus
                    color3f shaping:focusTint
                    asset shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    float width = 1
                    double3 xformOp:rotateXYZ = (90, 0, 90)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def DiskLight "Signs_Light_self_07" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 10
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, -90, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.394867956189822, 9.492934828289275, 4.300000067055264)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]

                def RectLight "Signs_Light_main_07" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float height = 1
                    float intensity = 20
                    bool normalize = 1
                    float shaping:cone:angle = 90
                    float shaping:cone:softness
                    float shaping:focus
                    color3f shaping:focusTint
                    asset shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    float width = 1
                    double3 xformOp:rotateXYZ = (90, 0, 90)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def DiskLight "Signs_Light_self_08" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 10
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, -90, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.3948679561898536, 6.332934828289323, 4.300000067055232)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]

                def RectLight "Signs_Light_main_08" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float height = 1
                    float intensity = 20
                    bool normalize = 1
                    float shaping:cone:angle = 90
                    float shaping:cone:softness
                    float shaping:focus
                    color3f shaping:focusTint
                    asset shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    float width = 1
                    double3 xformOp:rotateXYZ = (90, 0, 90)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def DiskLight "Signs_Light_self_09" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 10
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, -90, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.394867956189866, 3.172934828289162, 4.300000067055233)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]

                def RectLight "Signs_Light_main_09" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float height = 1
                    float intensity = 20
                    bool normalize = 1
                    float shaping:cone:angle = 90
                    float shaping:cone:softness
                    float shaping:focus
                    color3f shaping:focusTint
                    asset shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    float width = 1
                    double3 xformOp:rotateXYZ = (90, 0, 90)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def DiskLight "Signs_Light_self_10" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float intensity = 10
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (0, -90, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.3948679561898483, 0.012934828289201228, 4.300000067055232)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]

                def RectLight "Signs_Light_main_10" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float height = 1
                    float intensity = 20
                    bool normalize = 1
                    float shaping:cone:angle = 90
                    float shaping:cone:softness
                    float shaping:focus
                    color3f shaping:focusTint
                    asset shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    float width = 1
                    double3 xformOp:rotateXYZ = (90, 0, 90)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }
        }

        over "mesh_446A3B66C3CDC0D6"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "RyderHouse_Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 300
                float radius = 0.1
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.01, 1.76, 0.7000000104308128)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "RyderHouse_Light_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 300
                float radius = 0.1
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.26, -4.065, 0.20000000298023224)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }
        }

        over "mesh_454D7462D5DB81EC"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Pizza_Light_self_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 5
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 90, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.3, 8.4, 0.9000000134110451)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def DiskLight "Pizza_Light_main" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float intensity = 200
                    bool normalize = 1
                    float radius = 0.26
                    float shaping:cone:angle = 90
                    float shaping:cone:softness
                    float shaping:focus
                    color3f shaping:focusTint
                    asset shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    double3 xformOp:rotateXYZ = (90, 0, -90)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def SphereLight "Pizza_Light_self_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 5
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 90, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (3.7000000551342964, 8.4, 0.9000000134110451)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def DiskLight "Pizza_Light_main" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float intensity = 200
                    bool normalize = 1
                    float radius = 0.26
                    float shaping:cone:angle = 90
                    float shaping:cone:softness
                    float shaping:focus
                    color3f shaping:focusTint
                    asset shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    double3 xformOp:rotateXYZ = (90, 0, -90)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def SphereLight "Pizza_Light_self_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 5
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 90, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (3.02, -2.95, 1.6)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def DiskLight "Pizza_Light_main" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float intensity = 200
                    bool normalize = 1
                    float radius = 0.26
                    float shaping:cone:angle = 90
                    float shaping:cone:softness
                    float shaping:focus
                    color3f shaping:focusTint
                    asset shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    double3 xformOp:rotateXYZ = (90, 0, -90)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def SphereLight "Pizza_Light_self_04" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 5
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 90, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (3.02, -6.38, 1.6)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def DiskLight "Pizza_Light_main" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float intensity = 200
                    bool normalize = 1
                    float radius = 0.26
                    float shaping:cone:angle = 90
                    float shaping:cone:softness
                    float shaping:focus
                    color3f shaping:focusTint
                    asset shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    double3 xformOp:rotateXYZ = (90, 0, -90)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def SphereLight "Pizza_Light_self_05" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 5
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 90, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.84, -2.95, 1.6)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def DiskLight "Pizza_Light_main" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float intensity = 200
                    bool normalize = 1
                    float radius = 0.26
                    float shaping:cone:angle = 90
                    float shaping:cone:softness
                    float shaping:focus
                    color3f shaping:focusTint
                    asset shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    double3 xformOp:rotateXYZ = (90, 0, -90)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def SphereLight "Pizza_Light_self_06" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 5
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 90, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.83, -6.38, 1.6)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def DiskLight "Pizza_Light_main" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float intensity = 200
                    bool normalize = 1
                    float radius = 0.26
                    float shaping:cone:angle = 90
                    float shaping:cone:softness
                    float shaping:focus
                    color3f shaping:focusTint
                    asset shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    double3 xformOp:rotateXYZ = (90, 0, -90)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }
        }

        over "mesh_37EDDD93C2EF6646"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "StrretLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                bool enableColorTemperature = 1
                float intensity = 50
                bool normalize = 1
                float radius = 0.3
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.55, 0, 2.7)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "StrretLight_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                bool enableColorTemperature = 1
                float intensity = 50
                bool normalize = 1
                float radius = 0.3
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.38, 0, 2.7)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_37FDCCDA622B8867"
        {
            custom int preserveOriginalDrawCall = 1

            def Xform "Xform_37FDCCDA622B8867_0" (
                prepend references = @./meshescube.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_0B816EBB7E76D4FB"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Casinno_Fire_Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                color3f color = (0.6911197, 0.53611434, 0.21881007)
                float intensity = 100
                bool normalize = 1
                float radius = 0.2
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 1.9000000283122063)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_6F8BDB8BF255A746"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float colorTemperature = 4500
                bool enableColorTemperature = 1
                float intensity = 100
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.8, -1.5000000223517418, 1.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Light_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float colorTemperature = 4500
                bool enableColorTemperature = 1
                float intensity = 100
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.8, 2.500000037252903, 1.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Light_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 300
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.77, 1.7617460767608382, 0.8506610970915744)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Light_04" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float colorTemperature = 4500
                bool enableColorTemperature = 1
                float intensity = 100
                bool normalize = 1
                float radius = 0.05
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.57, 0.83, 0.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_FA40DD17B764E49B"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "blub_Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float colorTemperature = 4500
                bool enableColorTemperature = 1
                float intensity = 300
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-3.65, 1.54, 0.55)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "blub_Light_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float colorTemperature = 4500
                bool enableColorTemperature = 1
                float intensity = 300
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-13.36, -0.39, 0.55)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "blub_Light_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float colorTemperature = 4500
                bool enableColorTemperature = 1
                float intensity = 300
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-11.2, 7.76, 0.55)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "blub_Light_04" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float colorTemperature = 4500
                bool enableColorTemperature = 1
                float intensity = 300
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 90
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-26.47, 0.99, 0.55)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_369C6A5FDB4C7F3C"
        {
            def Xform "Xform_369C6A5FDB4C7F3C_0" (
                prepend references = @./meshescube.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_0AFBE0AEEF648C6E"
        {
            custom int preserveOriginalDrawCall = 1

            def Xform "Xform_0AFBE0AEEF648C6E_0" (
                prepend references = @./meshescube.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }
    }

    over "Looks"
    {
        over "mat_F053CE7860A30497"
        {
            over "Shader"
            {
                float inputs:metallic_constant = 0.35 (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Specular"
                    displayName = "Metallic Amount"
                    doc = "Metallic Material"
                    hidden = false
                )
            }
        }
    }
}

