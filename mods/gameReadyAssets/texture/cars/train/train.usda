#usda 1.0

over "RootNode"
{
    over "Looks"
    {
        over "mat_8A0FD365BBDBE0DC"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./34D5C901F7FEB740.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                )
            }
        }

        over "mat_93550F5E52290532"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./FB4A985871E3E719.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                )
            }
        }

        over "mat_B7511C4603856E4A"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./CD29A70F42DF6722.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                )
                color3f inputs:emissive_color_constant = (1, 1, 1) (
                    customData = {
                        float3 default = (1, 0.1, 0.1)
                        dictionary range = {
                            float3 max = (1, 1, 1)
                            float3 min = (0, 0, 0)
                        }
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Color"
                    doc = "The emissive color when no emissive color texture is specified."
                    hidden = false
                )
                float inputs:emissive_intensity = 100 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./CD29A70F42DF6722_emissive.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emissive"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
            }
        }

        over "mat_D22FB9B706643722"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./ECDB0A0B7BF77194.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                )
            }
        }

        over "mat_0915B90F7999AAB5"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./1805869014C294D9.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                )
                color3f inputs:emissive_color_constant = (1, 1, 1) (
                    customData = {
                        float3 default = (1, 0.1, 0.1)
                        dictionary range = {
                            float3 max = (1, 1, 1)
                            float3 min = (0, 0, 0)
                        }
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Color"
                    doc = "The emissive color when no emissive color texture is specified."
                    hidden = false
                )
                float inputs:emissive_intensity = 100 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./1805869014C294D9_emissive.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emissive"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
            }
        }

        over "mat_8CF2EC5FB335231A"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./47F9156D1F4571D2.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                )
            }
        }
    }

    over "meshes"
    {
        over "mesh_815125B772321CE1"
        {
            custom int preserveOriginalDrawCall = 1
            token visibility = "inherited"

            def DiskLight "TrainLight_Top_R" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 500
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (90.00000000000003, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.2, 8.2, 0.64)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def DiskLight "TrainLight_Top_L" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 500
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                double3 xformOp:rotateYZX = (90.00000000000003, 0, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.2, 8.2, 0.64)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "TrainLight_Bottom_R" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float height = 0.2
                float intensity = 500
                bool normalize = 1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                float width = 0.3
                double3 xformOp:rotateYZX = (90, 6.500000096857548, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.16, 7.95, -0.65)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def RectLight "TrainLight_Bottom_L" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float height = 0.2
                float intensity = 500
                bool normalize = 1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 0
                float width = 0.3
                double3 xformOp:rotateYZX = (90, -6.5, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.16, 7.95, -0.65)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }
        }

        over "mesh_AF18B9AAEB0D9109"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "TrainLight_Front_R_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 500
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.67, 7.7, 0.62)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "TrainLight_Front_L_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 500
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.67, 7.7, 0.62)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "TrainLight_Front_R_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 500
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.73, 7.7, 0.28)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "TrainLight_Front_L_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 500
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.73, 7.7, 0.28)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "TrainLight_Front_R_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 500
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.69, 8.8, -0.89)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "TrainLight_Front_L_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 500
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.69, 8.8, -0.89)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "TrainLight_Rear_R_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 500
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.69, -8.800000131130219, -0.89)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "TrainLight_Rear_L_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 500
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.69, -8.800000131130219, -0.89)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }
        }

        over "mesh_392A731072DE9598"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "TrainLight_Front_R_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 500
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.1, 8.200000122189522, 0.6000000089406967)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "TrainLight_Front_L_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 500
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.1, 8.200000122189522, 0.6000000089406967)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "TrainLight_Front_R_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 500
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.16, 8.00000011920929, -0.66)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "TrainLight_Front_L_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 500
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.16, 8.00000011920929, -0.66)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }
        }

        over "mesh_F3B091D97C770F91"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "TrainLight_Front_R_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 300
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-10.100000150501728, 0, -1.1000000163912773)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "TrainLight_Front_R_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 300
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-10.100000150501728, -1.3000000193715096, -1.1000000163912773)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "TrainLight_Front_L_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 300
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-10.100000150501728, 0, 1.1000000163912773)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "TrainLight_Front_L_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 300
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-10.100000150501728, -1.3000000193715096, 1.1000000163912773)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "TrainLight_Front_R_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 300
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (10.100000150501728, 0, -1.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "TrainLight_Front_R_04" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 300
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (10.100000150501728, -1.3000000193715096, -1.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "TrainLight_Front_L_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 300
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (10.100000150501728, 0, 1.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }

            def SphereLight "TrainLight_Front_L_04" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float intensity = 300
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateYZX = (90.00000000000003, 90.00000000000003, -1.2722218725854064e-14)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (10.100000150501728, -1.3000000193715096, 1.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYZX", "xformOp:scale"]
            }
        }
    }
}

