#usda 1.0
(
    upAxis = "Z"
)

over "Looks"
{
    def Material "Fingerprints007"
    {
        token outputs:mdl:displacement.connect = </Looks/Fingerprints007/Shader.outputs:out>
        token outputs:mdl:surface.connect = </Looks/Fingerprints007/Shader.outputs:out>
        token outputs:mdl:volume.connect = </Looks/Fingerprints007/Shader.outputs:out>

        def Shader "Shader"
        {
            uniform token info:implementationSource = "sourceAsset"
            uniform asset info:mdl:sourceAsset = @../../materials/AperturePBR_Translucent.mdl@
            uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Translucent"
            float inputs:ior_constant = 1.5999999 (
                customData = {
                    float default = 1.3
                    dictionary range = {
                        float max = 3
                        float min = 1
                    }
                }
                displayGroup = "Specular"
                displayName = "Index of Refraction"
                doc = """Index of Refraction of the material

"""
                hidden = false
            )
            asset inputs:normalmap_texture = @./Fingerprints007_normal.dds@ (
                colorSpace = "auto"
                customData = {
                    asset default = @@
                }
                displayGroup = "Normal"
                displayName = "Normal Map"
                hidden = false
                renderType = "texture_2d"
            )
            bool inputs:thin_walled = 1 (
                customData = {
                    bool default = 0
                }
                displayGroup = "Specular"
                displayName = "Thin-walled"
                doc = """Whether the material is thin-walled, use when material is being applied to single triangle thick geometry.

"""
                hidden = false
            )
            asset inputs:transmittance_texture = @./Fingerprints007_albedo.dds@ (
                colorSpace = "auto"
                customData = {
                    asset default = @@
                }
                displayGroup = "Volume"
                displayName = "Transmittance Color/Diffuse Albedo Texture"
                doc = """Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer

"""
                hidden = false
                renderType = "texture_2d"
            )
            bool inputs:use_diffuse_layer = 1 (
                customData = {
                    bool default = 0
                }
                displayGroup = "Volume"
                displayName = "Use diffuse layer"
                doc = """When set, simulates a diffuse layer on top of the material

"""
                hidden = false
            )
            token outputs:out (
                renderType = "material"
            )
        }
    }
}

