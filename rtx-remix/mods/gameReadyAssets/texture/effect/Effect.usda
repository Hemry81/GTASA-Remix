#usda 1.0
(
    customLayerData = {
        dictionary omni_layer = {
            dictionary locked = {
            }
            dictionary muteness = {
            }
        }
    }
    upAxis = "Z"
)

over "RootNode"
{
    over "Looks"
    {
        over "mat_05D81D806AE2DE92"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./rain_01_albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Albedo/Opacity Map"
                    doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:emissive_mask_texture = @@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = """The texture masking the emissive color

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = """Enables the emission of light from the material

"""
                    hidden = false
                )
                asset inputs:normalmap_texture = @./rain_01_normal.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                float inputs:reflection_roughness_constant = 1 (
                    customData = {
                        float default = 0.5
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Base Material"
                    displayName = "Roughness Amount"
                    doc = """Higher roughness values lead to more blurry reflections, use 0 for perfectly smooth.  (Used if no texture is specified).

"""
                    hidden = false
                )
                asset inputs:reflectionroughness_texture = @@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Roughness Map"
                    doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_2F580E4763FAB662"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./2F580E4763FAB662_albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                float inputs:emissive_intensity = 40 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emissive"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
                asset inputs:normalmap_texture = @@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Map"
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_B51546930E6B5738"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./B51546930E6B5738_albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                )
                asset inputs:normalmap_texture = @./B51546930E6B5738_normal.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                )
                asset inputs:reflectionroughness_texture = @@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Map"
                    hidden = false
                )
            }
        }

        over "mat_AF2FF583DF2F15D6"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./AF2FF583DF2F15D6_albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                float inputs:reflection_roughness_constant = 0.5 (
                    customData = {
                        float default = 0.5
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Amount"
                    doc = "Higher roughness values lead to more blurry reflections"
                    hidden = false
                )
            }
        }

        over "mat_66EFA5FE769C8102"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./Skid_Mark_albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Albedo/Opacity Map"
                    doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./Skid_Mark_normal.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./Skid_Mark_rough.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Roughness Map"
                    doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_48188D919022F08A"
        {
            over "Shader"
            {
                uniform bool enable_opacity = 1
                asset inputs:diffuse_texture = @./gun_fire_albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                float inputs:emissive_intensity = 30 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Intensity"
                    doc = """Intensity of the emission

"""
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./gun_fire_emissive.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Mask Map"
                    doc = """The texture masking the emissive color

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emissive"
                    displayName = "Enable Emission"
                    doc = """Enables the emission of light from the material

"""
                    hidden = false
                )
            }
        }

        over "mat_76BD5D19A139B6BC"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./76BD5D19A139B6BC_albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                )
                float inputs:emissive_intensity = 1000 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./76BD5D19A139B6BC_emissive.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emissive"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
                asset inputs:normalmap_texture = @./76BD5D19A139B6BC_normal.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                )
                float inputs:reflection_roughness_constant = 1 (
                    customData = {
                        float default = 0.5
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Amount"
                    doc = "Higher roughness values lead to more blurry reflections"
                    hidden = false
                )
            }
        }

        over "mat_BE686B6B6B8AE7ED"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./blood_01_albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./blood_01_normal.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./blood_01_rough.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Map"
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_FA2BCD3686C0FA3D"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./cars_scratch_albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Albedo/Opacity Map"
                    doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./cars_scratch_normal.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./cars_scratch_rough.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Roughness Map"
                    doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_CE919FA9A67900C4"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./Smoke_02_albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_B573F6EEBBA1EC5D"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./fire_albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Albedo/Opacity Map"
                    doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                float inputs:emissive_intensity = 50 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Intensity"
                    doc = """Intensity of the emission

"""
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./fire_emissive.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = """The texture masking the emissive color

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = """Enables the emission of light from the material

"""
                    hidden = false
                )
            }
        }

        over "mat_448152B6FE9F348C"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./Smoke_01_albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Albedo/Opacity Map"
                    doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./Smoke_01_normal.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_6B98F6F7ADBDA30D"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./Bullet_albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:metallic_texture = @./Bullet_metal.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./Bullet_normal.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./Bullet_rough.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Map"
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_12327A08E725DEE0"
        {
            over "Shader"
            {
                bool inputs:blend_enabled = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Alpha Blending"
                    displayName = "Blend Enabled"
                    doc = """Indicates if alpha state blending should be enabled.

"""
                    hidden = false
                )
                asset inputs:diffuse_texture = @./12327A08E725DEE0_albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Albedo/Opacity Map"
                    doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                float inputs:displace_in = 0.1 (
                    customData = {
                        float default = 1
                        dictionary range = {
                            float max = 255
                            float min = 0
                        }
                    }
                    displayGroup = "Displacement"
                    displayName = "Inwards Displacement"
                    doc = """Ratio of UV width to depth.  If the texture is displayed as 1 meter wide, then a value of 1 means it can be at most 1 meter deep.  A value of 0.1 means that same 1 meter wide quad can be at most 0.1 meters deep.
This parameter is unused.
"""
                    hidden = false
                )
                asset inputs:height_texture = @./12327A08E725DEE0_height.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Displacement"
                    displayName = "Height Map"
                    doc = """A pixel value of 0 is the lowest point.  A pixel value of 1 will be the highest point.
This parameter is unused.
"""
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:inverted_blend = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Alpha Blending"
                    displayName = "Inverted Blend"
                    doc = """Indicates if an inverted blend type should be used.
This parameter is unused.
"""
                    hidden = false
                )
                asset inputs:normalmap_texture = @./12327A08E725DEE0_normal.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./12327A08E725DEE0_rough.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Roughness Map"
                    doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:use_legacy_alpha_state = 0 (
                    customData = {
                        bool default = 1
                    }
                    displayGroup = "Alpha Blending"
                    displayName = "Use Legacy Alpha State"
                    doc = """Indicates if the alpha state should be driven by the game itself, or overridden by this material.

"""
                    hidden = false
                )
            }
        }

        over "mat_A79A316B36E6FB9A"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./droplets_albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Albedo/Opacity Map"
                    doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                float inputs:metallic_constant = 1 (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Base Material"
                    displayName = "Metallic Amount"
                    doc = """How metallic is this material, 0 for not at all, 1 for fully metallic. (Used if no texture is specified).

"""
                    hidden = false
                )
                asset inputs:normalmap_texture = @./droplets_normal.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                float inputs:reflection_roughness_constant = 0 (
                    customData = {
                        float default = 0.5
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Base Material"
                    displayName = "Roughness Amount"
                    doc = """Higher roughness values lead to more blurry reflections, use 0 for perfectly smooth.  (Used if no texture is specified).

"""
                    hidden = false
                )
            }
        }
    }

    over "meshes"
    {
        over "mesh_AD224C74FA8E50CA"
        {
            custom int preserveOriginalDrawCall = 0

            def Xform "Xform_AD224C74FA8E50CA_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
                prepend references = @../../meshes/effect/Waypoint 03.usd@
            )
            {
                rel material:binding = </Looks/Waypoint> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            over "mesh" (
                active = false
            )
            {
            }

            def Xform "Layer_01"
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, -0.800000011920929)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def Xform "Light_Quater_01"
                {
                    double3 xformOp:rotateXYZ = (0, 0, 0)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, -0.30000000447034836)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Light_Group_01"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 0)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.3, -0.43, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_02"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 15)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.4182754838011533, -0.3048960707436912, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_03"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 30)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.523981198588217, -0.11677449418825958, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_04"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 45)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.5042578098707509, 0.08382381649787263, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_05"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 60)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.4473676291720494, 0.2792097906887854, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_06"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 75)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.2740060907449333, 0.45372742793185594, 0.09999999999971987)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_07"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 0)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.3, -0.43, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_08"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 15)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.4182754838011533, -0.3048960707436912, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_09"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 30)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.523981198588217, -0.11677449418825958, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_10"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 45)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.5042578098707509, 0.08382381649787263, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_11"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 60)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.4473676291720494, 0.2792097906887854, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_12"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 75)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.2740060907449333, 0.45372742793185594, 0.09999999999971987)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }
                }

                def Xform "Light_Quater_02"
                {
                    double3 xformOp:rotateXYZ = (0, 0, 90)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, -0.30000000447034836)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Light_Group_01"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 0)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.3, -0.43, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_02"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 15)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.4182754838011533, -0.3048960707436912, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_03"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 30)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.523981198588217, -0.11677449418825958, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_04"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 45)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.5042578098707509, 0.08382381649787263, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_05"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 60)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.4473676291720494, 0.2792097906887854, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_06"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 75)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.2740060907449333, 0.45372742793185594, 0.09999999999971987)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_07"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 0)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.3, -0.43, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_08"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 15)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.4182754838011533, -0.3048960707436912, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_09"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 30)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.523981198588217, -0.11677449418825958, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_10"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 45)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.5042578098707509, 0.08382381649787263, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_11"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 60)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.4473676291720494, 0.2792097906887854, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_12"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 75)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.2740060907449333, 0.45372742793185594, 0.09999999999971987)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }
                }

                def Xform "Light_Quater_03"
                {
                    double3 xformOp:rotateXYZ = (0, 0, 120)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, -0.30000000447034836)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Light_Group_01"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 0)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.3, -0.43, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_02"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 15)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.4182754838011533, -0.3048960707436912, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_03"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 30)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.523981198588217, -0.11677449418825958, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_04"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 45)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.5042578098707509, 0.08382381649787263, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_05"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 60)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.4473676291720494, 0.2792097906887854, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_06"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 75)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.2740060907449333, 0.45372742793185594, 0.09999999999971987)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_07"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 0)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.3, -0.43, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_08"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 15)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.4182754838011533, -0.3048960707436912, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_09"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 30)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.523981198588217, -0.11677449418825958, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_10"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 45)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.5042578098707509, 0.08382381649787263, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_11"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 60)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.4473676291720494, 0.2792097906887854, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_12"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 75)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.2740060907449333, 0.45372742793185594, 0.09999999999971987)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }
                }

                def Xform "Light_Quater_04"
                {
                    double3 xformOp:rotateXYZ = (0, 0, 180)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, -0.30000000447034836)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Light_Group_01"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 0)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.3, -0.43, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_02"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 15)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.4182754838011533, -0.3048960707436912, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_03"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 30)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.523981198588217, -0.11677449418825958, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_04"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 45)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.5042578098707509, 0.08382381649787263, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_05"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 60)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.4473676291720494, 0.2792097906887854, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_06"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 75)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.2740060907449333, 0.45372742793185594, 0.09999999999971987)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_07"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 0)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.3, -0.43, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_08"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 15)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.4182754838011533, -0.3048960707436912, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_09"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 30)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.523981198588217, -0.11677449418825958, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_10"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 45)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.5042578098707509, 0.08382381649787263, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_11"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 60)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.4473676291720494, 0.2792097906887854, 0.1)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    def Xform "Light_Group_12"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 75)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.2740060907449333, 0.45372742793185594, 0.09999999999971987)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def SphereLight "Light_01" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (1, 0.39999998, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.05)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_02" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.4741313, 1, 0.39999998)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        def SphereLight "Light_03" (
                            prepend apiSchemas = ["ShapingAPI"]
                        )
                        {
                            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                            color3f inputs:color = (0.39999998, 0.4648652, 1)
                            float inputs:intensity = 1000
                            float inputs:radius = 0.05
                            float inputs:shaping:cone:angle = 5
                            float inputs:shaping:cone:softness
                            float inputs:shaping:focus
                            color3f inputs:shaping:focusTint
                            asset inputs:shaping:ies:file
                            bool visibleInPrimaryRay = 1
                            double3 xformOp:rotateXYZ = (45, 0, 215)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0.15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }
                }

                def SphereLight "SphereLight" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                    float inputs:intensity = 50
                    float inputs:radius = 0.2
                    float inputs:shaping:cone:angle = 180
                    float inputs:shaping:cone:softness
                    float inputs:shaping:focus
                    color3f inputs:shaping:focusTint
                    asset inputs:shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    double3 xformOp:rotateXYZ = (90, 0, 90)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0.5)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }
        }

        over "mesh_CC8AB8063489A3F8"
        {
            custom int preserveOriginalDrawCall = 0

            def Xform "Xform_CC8AB8063489A3F8_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
                prepend references = @../../meshes/effect/Waypoint 04.usd@
            )
            {
                rel material:binding = </Looks/Waypoint> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "Cylinder_001"
                {
                    float3 xformOp:scale = (100, 100, 100)
                }

                def Xform "Layer_01"
                {
                    double3 xformOp:rotateXYZ = (0, 0, 0)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, -0.5000000074505806)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Light_Quater_01"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 0)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def Xform "Light_Group_01"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 0)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.3, -0.43, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_02"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 15)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.4182754838011533, -0.3048960707436912, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_03"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 30)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.523981198588217, -0.11677449418825958, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_04"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 45)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.5042578098707509, 0.08382381649787263, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_05"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 60)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.4473676291720494, 0.2792097906887854, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_06"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 75)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.2740060907449333, 0.45372742793185594, 0.09999999999971987)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_07"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 0)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.3, -0.43, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_08"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 15)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.4182754838011533, -0.3048960707436912, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_09"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 30)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.523981198588217, -0.11677449418825958, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_10"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 45)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.5042578098707509, 0.08382381649787263, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_11"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 60)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.4473676291720494, 0.2792097906887854, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_12"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 75)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.2740060907449333, 0.45372742793185594, 0.09999999999971987)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }
                    }

                    def Xform "Light_Quater_02"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 90)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def Xform "Light_Group_01"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 0)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.3, -0.43, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_02"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 15)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.4182754838011533, -0.3048960707436912, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_03"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 30)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.523981198588217, -0.11677449418825958, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_04"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 45)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.5042578098707509, 0.08382381649787263, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_05"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 60)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.4473676291720494, 0.2792097906887854, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_06"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 75)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.2740060907449333, 0.45372742793185594, 0.09999999999971987)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_07"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 0)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.3, -0.43, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_08"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 15)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.4182754838011533, -0.3048960707436912, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_09"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 30)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.523981198588217, -0.11677449418825958, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_10"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 45)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.5042578098707509, 0.08382381649787263, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_11"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 60)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.4473676291720494, 0.2792097906887854, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_12"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 75)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.2740060907449333, 0.45372742793185594, 0.09999999999971987)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }
                    }

                    def Xform "Light_Quater_03"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 180)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def Xform "Light_Group_01"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 0)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.3, -0.43, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_02"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 15)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.4182754838011533, -0.3048960707436912, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_03"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 30)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.523981198588217, -0.11677449418825958, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_04"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 45)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.5042578098707509, 0.08382381649787263, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_05"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 60)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.4473676291720494, 0.2792097906887854, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_06"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 75)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.2740060907449333, 0.45372742793185594, 0.09999999999971987)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_07"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 0)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.3, -0.43, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_08"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 15)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.4182754838011533, -0.3048960707436912, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_09"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 30)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.523981198588217, -0.11677449418825958, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_10"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 45)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.5042578098707509, 0.08382381649787263, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_11"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 60)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.4473676291720494, 0.2792097906887854, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_12"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 75)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.2740060907449333, 0.45372742793185594, 0.09999999999971987)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }
                    }

                    def Xform "Light_Quater_04"
                    {
                        double3 xformOp:rotateXYZ = (0, 0, 270)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def Xform "Light_Group_01"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 0)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.3, -0.43, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_02"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 15)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.4182754838011533, -0.3048960707436912, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_03"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 30)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.523981198588217, -0.11677449418825958, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_04"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 45)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.5042578098707509, 0.08382381649787263, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_05"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 60)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.4473676291720494, 0.2792097906887854, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_06"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 75)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.2740060907449333, 0.45372742793185594, 0.09999999999971987)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_07"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 0)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.3, -0.43, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_08"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 15)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.4182754838011533, -0.3048960707436912, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_09"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 30)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.523981198588217, -0.11677449418825958, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_10"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 45)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.5042578098707509, 0.08382381649787263, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_11"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 60)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.4473676291720494, 0.2792097906887854, 0.1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        def Xform "Light_Group_12"
                        {
                            double3 xformOp:rotateXYZ = (0, 0, 75)
                            double3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.2740060907449333, 0.45372742793185594, 0.09999999999971987)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def SphereLight "Light_01" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (1, 0.39999998, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.05)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_02" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.4741313, 1, 0.39999998)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.1)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }

                            def SphereLight "Light_03" (
                                prepend apiSchemas = ["ShapingAPI"]
                            )
                            {
                                float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                                color3f inputs:color = (0.39999998, 0.4648652, 1)
                                float inputs:intensity = 3000
                                float inputs:radius = 0.05
                                float inputs:shaping:cone:angle = 5
                                float inputs:shaping:cone:softness
                                float inputs:shaping:focus
                                color3f inputs:shaping:focusTint
                                asset inputs:shaping:ies:file
                                bool visibleInPrimaryRay = 1
                                double3 xformOp:rotateXYZ = (65, 0, 215)
                                double3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0.15)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }
                    }

                    def SphereLight "SphereLight" (
                        prepend apiSchemas = ["ShapingAPI"]
                    )
                    {
                        float3[] extent = [(-50, -50, -50), (50, 50, 50)]
                        float inputs:intensity = 50
                        float inputs:radius = 0.2
                        float inputs:shaping:cone:angle = 180
                        float inputs:shaping:cone:softness
                        float inputs:shaping:focus
                        color3f inputs:shaping:focusTint
                        asset inputs:shaping:ies:file
                        bool visibleInPrimaryRay = 1
                        double3 xformOp:rotateXYZ = (90, 0, 90)
                        double3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0, 0, 0.5)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                    }
                }
            }

            over "mesh" (
                active = false
            )
            {
            }
        }
    }
}

over "Looks"
{
    def Material "Waypoint"
    {
        token outputs:mdl:displacement.connect = </Looks/Waypoint/Shader.outputs:out>
        token outputs:mdl:surface.connect = </Looks/Waypoint/Shader.outputs:out>
        token outputs:mdl:volume.connect = </Looks/Waypoint/Shader.outputs:out>

        def Shader "Shader"
        {
            uniform token info:implementationSource = "sourceAsset"
            uniform asset info:mdl:sourceAsset = @../../materials/AperturePBR_Translucent.mdl@
            uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Translucent"
            float inputs:ior_constant = 2.4199998 (
                customData = {
                    float default = 1.3
                    dictionary range = {
                        float max = 3
                        float min = 1
                    }
                }
                displayGroup = "Specular"
                displayName = "Index of Refraction"
                doc = """Index of Refraction of the material

"""
                hidden = false
            )
            token outputs:out (
                renderType = "material"
            )
        }
    }
}

