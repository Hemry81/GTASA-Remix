#usda 1.0
(
    upAxis = "Z"
)

over "RootNode"
{
    over "meshes"
    {
        over "mesh_5CE46B05826AEA74"
        {
            custom int preserveOriginalDrawCall = 1

            def DiskLight "Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                float inputs:intensity = 200
                float inputs:radius = 0.2
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-7.6, -1.6, 1.75)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "Light_02" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                float inputs:intensity = 200
                float inputs:radius = 0.2
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-3.9499999999999997, -1.6, 1.75)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "Light_03" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                float inputs:intensity = 200
                float inputs:radius = 0.2
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.2, -1.5999999999999996, 1.75)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "Light_04" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                float inputs:intensity = 200
                float inputs:radius = 0.2
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (3.55, -1.6, 1.75)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "Light_05" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                float inputs:intensity = 200
                float inputs:radius = 0.2
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (7.3, -1.5999999999999996, 1.75)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "Kitchen_Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                float inputs:height = 1
                float inputs:intensity = 200
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 0.15
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-4.5, 4, 1.5)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "Kitchen_Light_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                float inputs:height = 1
                float inputs:intensity = 200
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 0.15
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2, 4, 1.5)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }
    }

    over "instances"
    {
        over "inst_97CAD0471CCDD0BB_0" (
            active = false
        )
        {
        }

        over "inst_2F24D62BCA2BDADD_0" (
            active = false
        )
        {
        }
    }
}

