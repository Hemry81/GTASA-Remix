#usda 1.0
(
    upAxis = "Z"
)

over "RootNode"
{
    over "meshes"
    {
        over "mesh_D475E4169EA58195"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Disco_Big_Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                color3f color = (0.5, 1, 0.58928573)
                float colorTemperature = 6500
                bool enableColorTemperature = 0
                float intensity = 100
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (-90, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.10000000149011612, -0.6000000089406967, -0.20000000298023224)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_FBFE3C3264138B2B"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Disco_Big_Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                color3f color = (0.71129656, 0.5, 1)
                float colorTemperature = 6500
                bool enableColorTemperature = 0
                float intensity = 100
                bool normalize = 1
                float radius = 0.5
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (-90, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, -0.800000011920929, -0.20000000298023224)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_A2D7E69EC5F077B2"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "Disco_Bar_Light_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float diffuse = 0.2
                float intensity = 20
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-7.435, 9.6, 2.97)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Disco_Bar_Light_02" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float diffuse = 0.2
                float intensity = 20
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-7.435, 8.794999999999998, 2.97)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Disco_Bar_Light_03" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float diffuse = 0.2
                float intensity = 20
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-7.435, 7.990000000000002, 2.97)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Disco_Bar_Light_04" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float diffuse = 0.2
                float intensity = 20
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-7.435, 7.185, 2.97)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Disco_Bar_Light_05" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float diffuse = 0.2
                float intensity = 20
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-7.435, 6.379999999999999, 2.97)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Disco_Bar_Light_06" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float diffuse = 0.2
                float intensity = 20
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-7.435, 5.574999999999999, 2.97)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Disco_Bar_Light_07" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float diffuse = 0.2
                float intensity = 20
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-7.435, 4.769999999999999, 2.97)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Disco_Bar_Light_08" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float diffuse = 0.2
                float intensity = 20
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-7.435, 3.964999999999998, 2.97)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Disco_Bar_Light_09" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float diffuse = 0.2
                float intensity = 20
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-7.435, 3.1599999999999993, 2.97)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Disco_Bar_Light_10" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float diffuse = 0.2
                float intensity = 20
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-7.435, 2.3549999999999995, 2.97)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Disco_Bar_Light_11" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float diffuse = 0.2
                float intensity = 20
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-7.72, 1.58, 2.97)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Disco_Bar_Light_12" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float diffuse = 0.2
                float intensity = 20
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-8.400000125169754, 1.25, 2.97)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Disco_Bar_Light_13" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float diffuse = 0.2
                float intensity = 20
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-9.200000125169755, 1.25, 2.97)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "Disco_Bar_Light_14" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float diffuse = 0.2
                float intensity = 20
                bool normalize = 1
                float radius = 0.1
                float shaping:cone:angle = 180
                float shaping:cone:softness
                float shaping:focus
                color3f shaping:focusTint
                asset shaping:ies:file
                bool visibleInPrimaryRay = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-10.000000125169754, 1.25, 2.97)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }
    }

    over "Looks"
    {
        over "mat_F0B8A60DDD16E609"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @../texture/props/F0B8A60DDD16E609_albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                )
                float inputs:emissive_intensity = 0.01 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @../texture/props/F0B8A60DDD16E609_emissive.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emissive"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
            }
        }

        over "mat_404955A0C06EBD64"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @../texture/props/404955A0C06EBD64_albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                )
                float inputs:emissive_intensity = 0.01 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @../texture/props/404955A0C06EBD64_emissive.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emissive"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
            }
        }

        over "mat_070C2F2A357405D8"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @../texture/props/070C2F2A357405D8_albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                )
                float inputs:emissive_intensity = 0.01 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @../texture/props/070C2F2A357405D8_emissive.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emissive"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
            }
        }

        over "mat_9D6A9F7B9355F09F"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @../texture/props/9D6A9F7B9355F09F_albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                float inputs:emissive_intensity = 2 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Intensity"
                    doc = """Intensity of the emission

"""
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @../texture/props/9D6A9F7B9355F09F_emissive.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Mask Map"
                    doc = """The texture masking the emissive color

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emissive"
                    displayName = "Enable Emission"
                    doc = """Enables the emission of light from the material

"""
                    hidden = false
                )
            }
        }
    }
}

