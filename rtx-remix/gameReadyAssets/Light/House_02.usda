#usda 1.0
(
    upAxis = "Z"
)

over "RootNode"
{
    over "meshes"
    {
        over "mesh_26B921D2BB186910"
        {
            custom int preserveOriginalDrawCall = 1

            def SphereLight "House_02_Light_self_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                float inputs:intensity = 50
                float inputs:radius = 1
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (180, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.33, -2.2, 1.6000000000279897)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def SphereLight "House_02_Light_main_01" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                    float inputs:intensity = 200
                    float inputs:radius = 1
                    float inputs:shaping:cone:angle = 90
                    float inputs:shaping:cone:softness
                    float inputs:shaping:focus
                    color3f inputs:shaping:focusTint
                    asset inputs:shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    double3 xformOp:rotateXYZ = (180, -0, 0)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def SphereLight "House_02_Light_self_02" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                float inputs:intensity = 50
                float inputs:radius = 1
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (180, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.33, -7.2, 1.6000000000279897)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def SphereLight "House_02_Light_main_01" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                    float inputs:intensity = 200
                    float inputs:radius = 1
                    float inputs:shaping:cone:angle = 90
                    float inputs:shaping:cone:softness
                    float inputs:shaping:focus
                    color3f inputs:shaping:focusTint
                    asset inputs:shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    double3 xformOp:rotateXYZ = (180, -0, 0)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def SphereLight "House_02_Light_self_03" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                float inputs:intensity = 50
                float inputs:radius = 1
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (180, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-5.33, -2.2, 1.6000000000279897)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def SphereLight "House_02_Light_main_01" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                    float inputs:intensity = 200
                    float inputs:radius = 1
                    float inputs:shaping:cone:angle = 90
                    float inputs:shaping:cone:softness
                    float inputs:shaping:focus
                    color3f inputs:shaping:focusTint
                    asset inputs:shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    double3 xformOp:rotateXYZ = (180, -0, 0)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def SphereLight "House_02_Light_self_04" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                float inputs:intensity = 50
                float inputs:radius = 1
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (180, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-5.33, -7.2, 1.6000000000279897)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def SphereLight "House_02_Light_main_01" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                    float inputs:intensity = 200
                    float inputs:radius = 1
                    float inputs:shaping:cone:angle = 90
                    float inputs:shaping:cone:softness
                    float inputs:shaping:focus
                    color3f inputs:shaping:focusTint
                    asset inputs:shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    double3 xformOp:rotateXYZ = (180, -0, 0)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def SphereLight "House_02_Light_self_05" (
                prepend apiSchemas = ["ShapingAPI"]
                hide_in_stage_window = false
            )
            {
                float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 50
                float inputs:radius = 1
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (180, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (5.2, -2.5, 1.6000000000650516)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def SphereLight "House_02_Light_main_01" (
                    prepend apiSchemas = ["ShapingAPI"]
                )
                {
                    float3[] extent = [(-50, -50, -0), (50, 50, 0)]
                    float inputs:intensity = 100
                    float inputs:radius = 1
                    float inputs:shaping:cone:angle = 90
                    float inputs:shaping:cone:softness
                    float inputs:shaping:focus
                    color3f inputs:shaping:focusTint
                    asset inputs:shaping:ies:file
                    bool visibleInPrimaryRay = 1
                    double3 xformOp:rotateXYZ = (180, -0, 0)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }
        }
    }
}

